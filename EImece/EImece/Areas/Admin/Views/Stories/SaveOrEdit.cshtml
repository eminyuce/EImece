@using EImece.Domain.Entities;
@using EImece.Domain.Models.Enums;
@model Story
@using Resources;

@{
    var saveButtonText = AdminResource.SaveButtonText;
    var ExistingMainImageText = AdminResource.ExistingMainImageText;
    ViewBag.Title = "SaveOrEdit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var categories = (List<StoryCategory>)ViewBag.Categories;
    var categoriesDb = categories.Select(r => new SelectListItem() { Text = r.Name, Value = r.Id.ToString() }).ToList();

}

<h2>SaveOrEdit</h2>


@using (Html.BeginForm("SaveOrEdit", "Stories", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Story</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.CreatedDate)
        @Html.HiddenFor(model => model.UpdatedDate)
        @Html.HiddenFor(model => model.MainImageId)
        @Html.HiddenFor(model => model.Lang)


        <div class="form-group">
            @Html.LabelFor(model => model.StoryCategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(model => model.StoryCategoryId,
   categoriesDb,
   null,
   new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Lang, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsActive)
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.MetaKeywords, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.MetaKeywords, 2, 20, new { @style = "margin: 0px; width: 804px; height: 66px;" })
                @Html.ValidationMessageFor(model => model.MetaKeywords, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @data_ckeditor_field = "story", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageState, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.ImageState)
                    @Html.ValidationMessageFor(model => model.ImageState, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        @Html.Partial("pSliderResizing", (BaseContent)Model);

        <div class="form-group">
            @Html.LabelFor(model => model.MainPage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.MainPage)
                    @Html.ValidationMessageFor(model => model.MainPage, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.MainImageId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
      
                <input type="file" name="contentImage" />
                @Html.ValidationMessageFor(model => model.MainImageId, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-5">
                @if (Model.MainImageId.HasValue)
                {
                    <b>@ExistingMainImageText :</b>
                    @Html.Partial("pGridImageMainPage", (BaseContent)Model);
                }
            </div>

        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div id="storyTagsHtml">

                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@saveButtonText" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            CreateTags();
            function CreateTags() {
                var postData = JSON.stringify({ "language": $("#Lang").val(), "storyId": $("#Id").val() });
                ajaxMethodCall(postData, "/admin/Ajax/GetStoryTags", function (data) {
                    $("#storyTagsHtml").html(data);
                });
            }


        });
    </script>
}
