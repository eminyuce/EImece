@model EImece.Domain.Entities.ProductCategory
@using EImece.Domain.Entities;
@using SharkDev.MVC

@{
    ViewBag.Title = "SaveOrEdit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var parentCategory = (ProductCategory)ViewBag.ParentCategory;
}

<h2>SaveOrEdit</h2>
<div ng-controller="ProductCategoriesTreeController" class="row" style="padding:20px;">

    <div class="col-md-3">

        @Html.SharkDev().TreeView(settings =>
   {
       settings.Id = "treeViewContainer";
       settings.Header.Text = "Tree root - Animal";
       settings.Header.Visible = true;
       settings.Header.Expanded = true;
       settings.ClientHandlers.ContentSelect = @"function (e) {
console.log(e);
   $('#ParentName').text(e.name);
   $('#ParentId').val(e.id);
}";
       settings.AutoCompleteHandler = Url.Content("~/Home/GetBySample");
       settings.Height = 300;
       settings.Width = 270;
       settings.DataOnClient = true;
   }).GetContent(ViewBag.Tree)
    </div>
    <div class="col-md-9">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>ProductCategory</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.CreatedDate)
                @Html.HiddenFor(model => model.UpdatedDate)

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ParentId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.ParentId)

                        @if (Model.ParentId.HasValue && Model.ParentId > 0)
                        {
                            <span id="ParentName">
                                @parentCategory.Name
                            </span>
                        }
                        else
                        {
                            <span id="ParentName">
                            </span>
                        }
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsActive)
                            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ImageState, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.ImageState)
                            @Html.ValidationMessageFor(model => model.ImageState, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
