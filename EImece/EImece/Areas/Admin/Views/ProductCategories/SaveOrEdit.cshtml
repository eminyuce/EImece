@model EImece.Domain.Entities.ProductCategory
@using EImece.Domain.Entities;
@using SharkDev.MVC
@using EImece.Domain.Models.Enums;
@using SharkDev.Web.Controls.TreeView.Model;
@using Resources;

@{
    var saveButtonText = AdminResource.SaveButtonText;
    var ExistingMainImageText = AdminResource.ExistingMainImageText;
    ViewBag.Title = "SaveOrEdit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var parentCategory = (ProductCategory)ViewBag.ParentCategory;
    var productTree = (List<Node>)ViewBag.Tree;
    var templates = (List<SelectListItem>)ViewBag.Templates;
    var saveButtonAndCloseText = AdminResource.SaveButtonAndCloseText;
}

<h2>@AdminResource.ProductCategory</h2>
<hr class="adminLine" />

<div  style="padding:20px;">

    <div class="col-md-2">
        @if (productTree != null)
        {

            @Html.SharkDev().TreeView(settings =>
   {
       settings.Id = "treeViewContainer";
       settings.Header.Text = @AdminResource.ProductCategoryTreeName;
       settings.Header.Visible = false;
       settings.Header.Expanded = true;
       settings.ClientHandlers.ContentSelect = @"function (e) {
console.log(e);


  if(e.id != $('#Id').val()){
          $('#ParentName').text(e.name);
   $('#ParentId').val(e.id);
   }else{
        alert( $('#errorMessageForSameSelection').val());
    }

}";
       settings.AutoCompleteHandler = Url.Content("~/Home/GetBySample");
       settings.Height = 300;
       settings.Width = 270;
       settings.DataOnClient = true;
   }).GetContent(productTree)

        }

    </div>
    <div class="col-md-10">
        <input id="errorMessageForSameSelection" type="hidden" value="@AdminResource.ProductSameSelectionErrorMessage" />
        @using (Html.BeginForm("SaveOrEdit", "ProductCategories", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.CreatedDate)
                @Html.HiddenFor(model => model.UpdatedDate)

                @Html.HiddenFor(model => model.Lang)

                <div class="panel with-nav-tabs panel-default">
                    <div class="panel-heading">
                        <ul class="nav nav-tabs">
                            <li class="active"><a href="#tab1default" data-toggle="tab">@AdminResource.EntityShortFields</a></li>
                            <li><a href="#tab2default" data-toggle="tab">@AdminResource.EntityDescriptionPage</a></li>
                            <li class="Tools">
                                <input type="submit" name="saveButton" value="@saveButtonText" style="width:150px;" class="btn btn-success" />
                            </li>
                            <li class="Tools">
                                <input type="submit" name="saveButton" value="@saveButtonAndCloseText" style="width:150px;" class="btn btn-success" />
                            </li>
                            <li class="Tools"> @Html.ActionLink(AdminResource.BackToList, "Index", null, new { @class = "btn btn-default" })</li>
                        </ul>
                    </div>
                    <div class="panel-body">
                        <div class="tab-content">
                            <div id="tab1default" class="tab-pane fade in active">



                                <div class="form-group">
                                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.ParentId, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.HiddenFor(model => model.ParentId)

                                        @if (Model.ParentId > 0)
                                        {
                                            <span id="ParentName">
                                                @parentCategory.Name
                                            </span>
                                        }
                                        else
                                        {
                                            <span id="ParentName">
                                            </span>
                                        }
                                        <input id="SetParentIdRoot" value="Make Main Page" type="button">
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.DiscountPercantage, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.DiscountPercantage, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.DiscountPercantage, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.MetaKeywords, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.TextAreaFor(model => model.MetaKeywords, 2, 20, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.MetaKeywords, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        <div class="checkbox checkbox-danger">
                                            @Html.EditorFor(model => model.IsActive)
                                            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.MainPage, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        <div class="checkbox">
                                            @Html.EditorFor(model => model.MainPage)
                                            @Html.ValidationMessageFor(model => model.MainPage, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.MainImageId, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-5">
                                        <input type="file" name="postedImage" />
                                        @Html.ValidationMessageFor(model => model.MainImageId, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-5">
                                        @if (Model.MainImageId.HasValue)
                                        {
                                            <b>@ExistingMainImageText :</b>
                                            @Html.Partial("pGridImageMainPage", (BaseContent)Model);
                                        }
                                    </div>
                                </div>
                                @Html.Partial("pSliderResizing", (BaseContent)Model)



                                <div class="form-group">
                                    @Html.LabelFor(model => model.ImageState, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        <div class="checkbox">
                                            @Html.EditorFor(model => model.ImageState)
                                            @Html.ValidationMessageFor(model => model.ImageState, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>




                            </div>
                            <div class="tab-pane fade" id="tab2default">
                                <div class="form-group">
                                    <div class="col-md-12">
                                        @Html.TextAreaFor(model => model.Description, new { @data_ckeditor_field = "product", @class = "form-control" })
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>

            </div>
        }
    </div>
</div>

<div>
       @Html.ActionLink(AdminResource.BackToList, "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            setPreSelectedTreeNode($("#ParentId"));
            $("#SetParentIdRoot").click(function () {
                $("#ParentId").val("0");
                console.log("111");
                $("#ParentName").text("");
            });



        });
    </script>
}
