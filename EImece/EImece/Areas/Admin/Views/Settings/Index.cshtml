@model List<Setting>
@using EImece.Domain.Helpers;
@using SharkDev.MVC
@using GridMvc.Html
@using GridMvc.Sorting
@using EImece.Domain;
@using EImece.Domain.Entities;
@using Resources;
@using EImece.Domain.Helpers.Extensions;

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";

    int pageSizeNumber = Request.QueryString["GridPageSize"].ToInt();
    pageSizeNumber = pageSizeNumber == 0 ? Settings.GridPageSizeNumber : pageSizeNumber;
    var controllerName = "Settings";
    var title = "Settings";
    var gridName = "SettingGrid";
    var contents = Model;
    var baseList = contents.DownCasting();

    var gridImagesText = AdminResource.GridImagesText;
    var gridEditText = AdminResource.GridEditText;
    var gridDeleteText = AdminResource.GridDeleteText;
    var gridDetailText = AdminResource.GridDetailText;
    var gridMainPageImageText = AdminResource.GridMainPageImageText;

}

<h2>Settings</h2>

<div class="panel panel-info">
    @Html.ActionLink( AdminResource.ExportToExcel, "ExportExcel", new { @id = 0 }, new { @class = "btn btn-link" })



    @Html.Partial("pGridOperations", new ViewDataDictionary(ViewData){
            {"controllerName",controllerName}
                      ,{"StateTypes","State"}
           ,{"orderingButton",false}
           ,{"selectAll",true}
           ,{"deleteAll",true}
            ,{"SetStateOnOrOff",false}})
</div>
<div class="panel panel-primary">
    @Html.Partial("pGridDropDown", baseList)

    @Html.Grid(contents).Named(gridName).Columns(columns =>
{

columns.Add().Encoded(false).
        Sanitized(false).
        SetWidth(10).
        RenderValueAs(o => String.Format("<input gridkey-id='{0}'  class='gridCheckboxes'  name='checkboxGrid' type='checkbox'>", o.Id));

columns.Add(o => o.Id, true);

columns.Add()
                            .Encoded(false)
                            .Sanitized(false)
                            .SetWidth(30)
                            .RenderValueAs(d =>
                            @<b>
                                @Html.ActionLink(gridEditText, "SaveOrEdit", controllerName, new { id = d.Id }, new { @class = "btn btn-primary btn-sm     " })
                            </b>);

columns.Add()
       .Encoded(false)
       .Sanitized(false)
       .SetWidth(30)
       .RenderValueAs(d =>
    @<b>
        @Html.ActionLink(gridDetailText, "Details", controllerName, new { id = d.Id }, new { @class = "btn btn-default btn-sm     " })
    </b>);
 

columns.Add()
             .Encoded(false)
             .Sanitized(false)
             .SetWidth(30)
             .RenderValueAs(d =>
            @<b>
                @Html.ActionLink(gridDeleteText, "Delete", controllerName, new { id = d.Id }, new { @class = "btn btn-danger btn-sm " })
            </b>);


columns.Add(c => c.Name)
       .Titled("Title")
       .Filterable(true);

columns.Add(c => c.SettingKey)
                       .Titled("SettingKey")
                       .Filterable(true);


columns.Add(c => c.SettingValue)
                       .Titled("SettingValue")
                       .Filterable(true);



  


columns.Add(o => o.UpdatedDate)
           .Titled(AdminResource.CreatedDate)
       .Sortable(true)
       .Css("gridDateClass")
       .RenderValueAs(o => o.CreatedDate != null ? String.Format("{0}", o.CreatedDate.Value.ToShortDateString()) : null)
       .SortInitialDirection(GridSortDirection.Descending);


 

                       }).SetRowCssClasses(item => item.Id % 2 == 0 ? "warning" : string.Empty).WithPaging(pageSizeNumber).Sortable().Filterable().WithMultipleFilters().Selectable(false)

</div>




