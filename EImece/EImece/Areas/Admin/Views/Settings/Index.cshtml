@model List<Setting>
@using EImece.Domain.Helpers;

@using GridMvc.Html
@using GridMvc.Sorting
@using EImece.Domain;
@using EImece.Domain.Entities;
@using Resources;
@using EImece.Domain.Helpers.Extensions;

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";

    int pageSizeNumber = Request.QueryString["GridPageSize"].ToInt();
    pageSizeNumber = pageSizeNumber == 0 ? AppConfig.GridPageSizeNumber : pageSizeNumber;
    var controllerName = "Settings";
    var title = "Settings";
    var gridName = "SettingGrid";
    var contents = Model;
    var baseList = contents.DownCasting();

    var gridImagesText = AdminResource.GridImagesText;
    var gridEditText = AdminResource.GridEditText;
    var gridDeleteText = AdminResource.GridDeleteText;
    var gridDetailText = AdminResource.GridDetailText;
    var gridMainPageImageText = AdminResource.GridMainPageImageText;

}

<h2>@AdminResource.Settings</h2>
<hr class="adminLine" />
<div class="panel panel-info">
    @Html.ActionLink(AdminResource.ExportToExcel, "ExportExcel", new { @id = 0 }, new { @class = "btn btn-link" })

    @Html.Partial("pGridOperations", new ViewDataDictionary(ViewData){
            {"controllerName",controllerName}
                      ,{"StateTypes","State"}
           ,{"orderingButton",false}
           ,{"selectAll",true}
           ,{"deleteAll",true}
            ,{"SetStateOnOrOff",false}})
</div>
<div class="panel panel-primary">
    @Html.Partial("pGridDropDown", baseList)

    @Html.Grid(contents).Named(gridName).Columns(columns =>
{
columns.Add(o => o.Id, true);
columns.Add()
.Encoded(false)
.Sanitized(false)
.Css("gridButtons")
.RenderValueAs(d => Html.Partial("pGridCheckbox", new ViewDataDictionary(ViewData){
            {"ItemId",d.Id}}));

columns.Add()
                            .Encoded(false)
                            .Sanitized(false)
                            .SetWidth(30)
                            .RenderValueAs(d =>
                        @<b>
                            @Html.ActionLink(gridEditText, "SaveOrEdit", controllerName, new { id = d.Id }, new { @class = "btn btn-primary btn-sm     " })
                        </b>);

columns.Add()
.Encoded(false)
.Sanitized(false)
.SetWidth(30)
.RenderValueAs(d =>
@<b>
    @Html.ActionLink(gridDetailText, "Details", controllerName, new { id = d.Id }, new { @class = "btn btn-default btn-sm     " })
</b>);

columns.Add()
.Encoded(false)
.Sanitized(false)
.SetWidth(30)
.RenderValueAs(d => Html.Partial("pDeleteModal", new ViewDataDictionary(ViewData) {
{ "ItemId", d.Id },
{"controllerName",controllerName},
{ "DeleteText", gridDeleteText },
{ "ItemDescription", d.Name } }));

columns.Add(c => c.Name)
  .Titled(AdminResource.Name)
   .Filterable(true);

columns.Add(c => c.SettingKey)
                   .Titled(AdminResource.SettingKey)
                   .Filterable(true);

columns.Add(c => c.SettingValue)
                   .Titled(AdminResource.SettingValue)
                   .Filterable(true);

columns.Add(o => o.UpdatedDate)
       .Titled(AdminResource.UpdatedDate)
   .Sortable(true)
   .Css("gridDateClass")
   .RenderValueAs(o => o.UpdatedDate != null ? String.Format("{0}", o.UpdatedDate.ToShortDateString()) : null)
   .SortInitialDirection(GridSortDirection.Descending);

}).SetRowCssClasses(item => item.Id % 2 == 0 ? "warning" : string.Empty).WithPaging(pageSizeNumber).Sortable().Filterable().WithMultipleFilters().Selectable(false)
</div>