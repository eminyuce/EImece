@using EImece.Domain.Entities;
@using EImece.Domain.Helpers;
@using EImece.Domain.Helpers.Extensions;
@using EImece.Domain.Models.FrontModels;
@model List<ProductCategoryTreeModel>
@{
    var treeNodes = Model;
    String urlPattern= ViewData["UrlPattern"].ToStr();
    String jsFunctionName = ViewData["JsFunctionName"].ToStr();

    var viewData = new ViewDataDictionary(){
                            {"UrlPattern",urlPattern}
                          ,{"IsExcelButtonEnabled",true}};

}

<ul class="treeProducts" id="responsive">

    @foreach (ProductCategoryTreeModel p in treeNodes)
                {
                    var productCategory = p.ProductCategory;
                    if (p.Childrens.Any())
                    {
    <li class="dropdown">
        @if (String.IsNullOrEmpty(urlPattern))
        {
            <a onclick="productTreeClick(event,@productCategory.Id,'@productCategory.Name')">@p.AdminText</a>
        }
        else
        {
            <a href="@String.Format("{0}{1}",urlPattern,productCategory.Id)">@p.AdminText</a>
        }

        @Html.Partial("_ProductCategoryTreeChildren", p.Childrens, viewData)
    </li>

        }
        else
        {

<li>
    @if (String.IsNullOrEmpty(urlPattern))
    {
        <a onclick="productTreeClick(event,@productCategory.Id,'@productCategory.Name')">@p.AdminText</a>
    }
    else
    {
        <a href="@String.Format("{0}{1}",urlPattern,productCategory.Id)">@p.AdminText</a>
    }
</li>
        }
    }
</ul>