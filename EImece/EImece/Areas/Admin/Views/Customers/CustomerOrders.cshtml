@model List<Order>
@using EImece.Domain.Helpers;
@using GridMvc.Html
@using GridMvc.Sorting
@using EImece.Domain;
@using EImece.Domain.Entities;
@using Resources;
@using EImece.Domain.Helpers.Extensions;

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";

    int pageSizeNumber = Request.QueryString["GridPageSize"].ToInt();
    pageSizeNumber = pageSizeNumber == 0 ? AppConfig.GridPageSizeNumber : pageSizeNumber;
    var controllerName = "Home";
    var gridName = "OrderGrid";
    var contents = Model;
    var baseList = contents.DownCasting<Order>();

    var gridImagesText = AdminResource.GridImagesText;
    var gridEditText = AdminResource.GridEditText;
    var gridDeleteText = AdminResource.GridDeleteText;
    var gridDetailText = AdminResource.GridDetailText;
    var gridMainPageImageText = AdminResource.GridMainPageImageText;
    Customer customer = ViewBag.Customer;

}

<h2>@customer.FullName @AdminResource.Order</h2>
<p class="text-sm-left">@customer.Email</p>
<p class="text-sm-left">@customer.Address</p>
<hr class="adminLine" />
@Html.Partial("pAdminSearchForm", new ViewDataDictionary(ViewData){
                      {"IdValueExists",true}})
<br />
<br />

<div class="panel panel-primary">
    @Html.Partial("pGridDropDown", baseList)
    @Html.Grid(contents).Named(gridName).Columns(columns =>
{

    columns.Add()
                   .Encoded(false)
                   .Sanitized(false)
                    .Css("gridButtons")
                   .RenderValueAs(d => Html.Partial("pGridCheckbox", new ViewDataDictionary(ViewData){
            {"ItemId",d.Id}}));

    columns.Add(c => c.OrderNumber)
.Filterable(true)
.Encoded(false)
.Sanitized(false)
.RenderValueAs(d => CustomerOrderDetail(d, controllerName));

    columns.Add(o => o.OrderGuid);
    columns.Add(o => o.PaymentStatus);
    columns.Add(o => o.Price);
      columns.Add(o => o.OrderComments)
   .Encoded(false).
        Sanitized(false).
        SetWidth(10).
        RenderValueAs(o => String.Format("<textarea readonly  style='height: 146px; background-color: transparent; width: 399px; margin: 0px;'>{0}</textarea>", o.OrderComments));
    columns.Add(o => o.CreatedDate)
.Titled(AdminResource.CreatedDate)
.Sortable(true)
.Css("gridDateClass")
.RenderValueAs(o => o.CreatedDate != null ? String.Format("{0}", o.CreatedDate.ToShortDateString()) : null)
.SortInitialDirection(GridSortDirection.Descending);

}).SetRowCssClasses(item => item.IsActive ? string.Empty : "GridIsActive").WithPaging(pageSizeNumber).Sortable().Filterable().WithMultipleFilters().Selectable(false)
</div>

@helper CustomerOrderDetail(Order o, String controllerName)
{
    <b>@o.OrderNumber</b>
    <br />
    <a data-toggle="modal" class="btn btn-outline btn-info btn-xs" data-order-Id="@o.Id" style="font-size:0.8em;" data-target="@String.Format("#myModal_{0}",o.Id)">
    @AdminResource.OrderDetails</a>

    <!-- Modal -->
    <div id="@String.Format("myModal_{0}",o.Id)" class="modal fade" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">@AdminResource.Order @o.OrderNumber</h4>
                </div>
                <div class="modal-body">
                    <div data-order-product-detail="@o.Id">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">@AdminResource.Close</button>
                </div>
            </div>
        </div>
    </div>
}
@section Scripts{
    <script>

        $(document).ready(function () {

            $('[data-order-Id]').each(function () {
                $(this).off("click");
                $(this).on("click", function (e) {
                    e.preventDefault();
                    var caller = e.target;
                    var orderId = $(caller).attr('data-order-Id');
                    var postData = JSON.stringify({ orderId: orderId });
                    console.log(postData);
                    ajaxMethodCall(postData, "/Admin/Ajax/GetOrderDetail", function (data) {
                        $('[data-order-product-detail=' + orderId + ']').html(data);
                    });
                });
            });

        });
    </script>
}