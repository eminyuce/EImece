@model Order
@using EImece.Domain.Helpers;
@using GridMvc.Html
@using GridMvc.Sorting
@using EImece.Domain;
@using EImece.Domain.Entities;
@using Resources;
@using EImece.Domain.Helpers.Extensions;
@{
    var order = Model;
    var orderProducts = Model.OrderProducts;
   
}
<section class="order-details">


    <div class="text-center">
        <b>@Resource.DatePurchased - @order.CreatedDate.ToString("dd MMMM ddd, HH:mm")</b>
    </div>
    <table class='table table-hover table-bordered table-striped'>

        <thead>
            <tr class="info">
                <th class="table__product-name product-name">@AdminResource.Product</th>
                <th class="table__product-name product-name"></th>
                <th class="table__product-name product-Quantity">@AdminResource.Quantity</th>
                <th class="table__product-table product-total">@AdminResource.TotalPrice</th>
            </tr>
        </thead>

        <tbody>
            @foreach (var orderProduct in orderProducts)
            {
                var imgTag = orderProduct.Product.GetCroppedImageUrl(orderProduct.Product.MainImageId, 100, 0);
                <tr class="table__line-item order_item">
                    <td class="table__product-name product-name">
                        <a class="cart-item-thumb mx-auto mr-sm-4" href="@orderProduct.Product.DetailPageRelativeUrl"><img src="@imgTag" alt="Product"></a>
                    </td>
                    <td class="table__product-name product-name">
                        <a href="@orderProduct.Product.Name">@orderProduct.Product.Name</a><br />
                        <span>@AdminResource.ProductCategory : @orderProduct.Product.ProductCategory.Name</span>
                    </td>
                    <td class="table__product-name product-name">
                        <strong class="product-quantity">@orderProduct.Product.Price.CurrencySign() × @orderProduct.Quantity</strong>
                    </td>
                    <td class="table__product-total product-total">
                        <span class="Price-amount amount">
                            @orderProduct.TotalPrice.CurrencySign()
                        </span>
                    </td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr class="success">
                <th colspan="2" scope="row">@AdminResource.TotalPrice</th>
                <td>
                    <span class="Price-Quantity">
                        @orderProducts.Sum(r => r.Quantity)  @AdminResource.PieceOfProductSold
                    </span>
                </td>
                <td>
                    <span class="Price-amount amount">
                        @order.PaidPrice.ToDouble().CurrencySign()
                    </span>
                </td>
            </tr>
        </tfoot>
    </table>

    <section class="customer-details">
        <h3 class="column__title">@AdminResource.ShippingAddress</h3>
        <address>
            @order.ShippingAddress.Description
        </address>
    </section>
</section>