@model EImece.Domain.Entities.Menu
@using EImece.Domain.Entities;
@using SharkDev.MVC;
@using EImece.Domain.Models.Enums;
@using SharkDev.Web.Controls.TreeView.Model;
@using Resources;
@{
    ViewBag.Title = "SaveOrEdit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var parentMenu = (Menu)ViewBag.ParentMenu;
    var ExistingMainImageText = AdminResource.ExistingMainImageText;
    var saveButtonText = AdminResource.SaveButtonText;
    var menuLinks = (List<SelectListItem>)ViewBag.MenuLinks;
    var PleaseSelectYourMenuCategoryFromTree = AdminResource.PleaseSelectYourMenuCategoryFromTree;
    var productTree = (List<Node>)ViewBag.Tree;
    var saveButtonAndCloseText = AdminResource.SaveButtonAndCloseText;
}

<h2>@AdminResource.Menu</h2>
<hr class="adminLine" />

<div class="row" style="padding:20px;">

    <div class="col-md-2">
        @if (productTree != null)
        {
        @Html.SharkDev().TreeView(settings =>
{
   settings.Id = "treeViewContainer";
   settings.Header.Text = AdminResource.MenuTreeName;
   settings.Header.Visible = false;
   settings.Header.Expanded = true;
   settings.ClientHandlers.ContentSelect = @"function (e) {
console.log(e);
if(e.id != $('#Id').val()){
    $('#ParentName').text(e.name);
       $('#ParentId').val(e.id);
}else{
    alert( $('#errorMessageForSameSelection').val());
}

}";
   settings.Height = 300;
   settings.Width = 270;
   settings.DataOnClient = true;
}).GetContent(productTree)
        }
    </div>
    <div class="col-md-10">
        <input id="errorMessageForSameSelection" type="hidden" value="@AdminResource.MenuSameSelectionErrorMessage" />
        @using (Html.BeginForm("SaveOrEdit", "Menus", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

           @Html.ValidationSummary(true, "", new { @class = "alert alert-success" })
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.CreatedDate)
            @Html.HiddenFor(model => model.UpdatedDate)

            @Html.HiddenFor(model => model.Lang)

            <div class="panel with-nav-tabs panel-default">
                <div class="panel-heading">
                    <ul class="nav nav-tabs">
                        <li class="active"><a href="#tab1default" data-toggle="tab">@AdminResource.EntityShortFields</a></li>
                        <li><a href="#tab2default" data-toggle="tab">@AdminResource.EntityDescriptionPage</a></li>
                        <li class="Tools">
                            <input type="submit" name="saveButton" value="@saveButtonText" style="width:150px;" class="btn btn-success" />
                        </li>
                        <li class="Tools">
                            <input type="submit" name="saveButton" value="@saveButtonAndCloseText" style="width:150px;" class="btn btn-success" />
                        </li>
                        <li class="Tools"> @Html.ActionLink(AdminResource.BackToList, "Index", null, new { @class = "btn btn-default" })</li>
                    </ul>
                </div>
                <div class="panel-body">
                    <div class="tab-content">
                        <div id="tab1default" class="tab-pane fade in active">

                            <div class="form-group">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.MetaKeywords, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.MetaKeywords, 2, 20, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.MetaKeywords, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-3">
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.IsActive)
                                    @Html.EditorFor(model => model.IsActive)
                                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.MainPage)
                                    @Html.EditorFor(model => model.MainPage)
                                    @Html.ValidationMessageFor(model => model.MainPage, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.Static)
                                    @Html.EditorFor(model => model.Static)
                                    @Html.ValidationMessageFor(model => model.Static, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            @if (Model.Id == 0)
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.MenuLink, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.MenuLink, menuLinks, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.MenuLink, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        }
                        else
                        {
                            @Html.HiddenFor(model => model.MenuLink)
                        }

                            <div class="form-group">
                                @Html.LabelFor(model => model.MainImageId, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-3">
                                    <input type="file" name="postedImage" />
                                    @Html.ValidationMessageFor(model => model.MainImageId, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.ImageState)
                                    @Html.EditorFor(model => model.ImageState)
                                    @Html.ValidationMessageFor(model => model.ImageState, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3">
                                    @if (Model.MainImageId.HasValue)
                                {
                                    <b>@ExistingMainImageText :</b>
                                    @Html.Partial("pGridImageMainPage", (BaseContent)Model);
                                }
                                </div>
                            </div>
                            @Html.Partial("pSliderResizing", (BaseContent)Model)

                            <div class="form-group">
                                @Html.LabelFor(model => model.Link, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Link, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Link, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.LinkIsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.LinkIsActive)
                                        @Html.ValidationMessageFor(model => model.LinkIsActive, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div id="pageThemeWrapper" style="@String.Format("{0}", (Model.Id>0 && Model.MenuLink.Equals("pages-index") ) ? "" : "display: none;")" class="form-group">
                                @Html.LabelFor(model => model.PageTheme, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <div class="checkbox">
                                        @Html.Partial("pPageThemes", Model)
                                        @Html.ValidationMessageFor(model => model.PageTheme, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade" id="tab2default">
                            <div class="form-group">
                                <div class="col-md-12">
                                    @Html.TextAreaFor(model => model.Description, new { @data_ckeditor_field = "product", @class = "form-control" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        }
    </div>
</div>
<div>
    @Html.ActionLink(AdminResource.BackToList, "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {

            $("#SetParentIdRoot").click(function () {
                $("#ParentId").val("0");
                console.log("111");
                $("#ParentName").text("");
            });
            // menuChangeEvent();
            $("#MenuLink").change(menuChangeEvent);
            function menuChangeEvent() {
                var selectedValue = $("#MenuLink option:selected").val();
                if (selectedValue == 'pages-index') {
                    $("#pageThemeWrapper").show();
                } else {
                    $("#pageThemeWrapper").hide();
                }
            }

        });
    </script>
}