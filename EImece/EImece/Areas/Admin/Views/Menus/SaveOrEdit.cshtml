@model EImece.Domain.Entities.Menu
@using EImece.Domain.Entities;
@using SharkDev.MVC;
@using EImece.Domain.Models.Enums;
@using SharkDev.Web.Controls.TreeView.Model;
@using Resources;
@{
    ViewBag.Title = "SaveOrEdit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var parentMenu = (Menu)ViewBag.ParentMenu;
    var ExistingMainImageText = AdminResource.ExistingMainImageText;

    var menuLinks = (List<SelectListItem>)ViewBag.MenuLinks;

    var productTree =(List<Node>) ViewBag.Tree;
}



<h2>SaveOrEdit</h2>

<div class="row" style="padding:20px;">

    <div class="col-md-3">
        @if (productTree != null)
        {
            @Html.SharkDev().TreeView(settings =>
   {
       settings.Id = "treeViewContainer";
       settings.Header.Text = "Tree root - Animal";
       settings.Header.Visible = false;
       settings.Header.Expanded = true;
       settings.ClientHandlers.ContentSelect = @"function (e) {
console.log(e);
   $('#ParentName').text(e.name);
   $('#ParentId').val(e.id);
}";
       settings.AutoCompleteHandler = Url.Content("~/Home/GetBySample");
       settings.Height = 300;
       settings.Width = 270;
       settings.DataOnClient = true;
   }).GetContent(productTree)
        }


    </div>
    <div class="col-md-9">

     @using (Html.BeginForm("SaveOrEdit", "Menus", FormMethod.Post, new { enctype = "multipart/form-data" }))
     {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Menu</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.CreatedDate)
                @Html.HiddenFor(model => model.UpdatedDate)
                @Html.HiddenFor(model => model.MainImageId)

             

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsActive)
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Description,new { @data_ckeditor_field = "menu", @class = "form-control" } )
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ImageState, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.CheckBoxFor(model => model.ImageState)
                            @Html.ValidationMessageFor(model => model.ImageState, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MainImageId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        <input type="file" name="menuImage" />
                        @Html.ValidationMessageFor(model => model.MainImageId, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-5">
                        @if (Model.MainImageId.HasValue)
                        {
                            <b>@ExistingMainImageText :</b>
                            @Html.Partial("pGridImageMainPage", (BaseContent)Model);
                        }
                    </div>
                </div>

                @Html.Partial("pSliderResizing", (BaseContent)Model);



                <div class="form-group">
                    @Html.LabelFor(model => model.ParentId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                      
                        @if (Model.ParentId > 0 && parentMenu != null)
                        {
                            <span id="ParentName">
                                @parentMenu.Name
                            </span>
                        }
                        else
                        {
                            <span id="ParentName">
                            </span>
                        }
                        @Html.HiddenFor(model => model.ParentId)
                        <input id="SetParentIdRoot" value="Make Main Page" type="button">
                    </div>
                </div>




                <div class="form-group">
                    @Html.LabelFor(model => model.MainPage, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.CheckBoxFor(model => model.MainPage)
                        </div>
                    </div>
                   
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MenuLink, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.MenuLink, menuLinks, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.MenuLink, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Static, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Static)
                            @Html.ValidationMessageFor(model => model.Static, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Link, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Link, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Link, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LinkIsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.LinkIsActive)
                            @Html.ValidationMessageFor(model => model.LinkIsActive, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div id="pageThemeWrapper" style="display: none;" class="form-group">
                    @Html.LabelFor(model => model.PageTheme, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.Partial("pPageThemes",Model)
                            @Html.ValidationMessageFor(model => model.PageTheme, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {

            $("#SetParentIdRoot").click(function () {
                $("#ParentId").val("0");
                console.log("111");
                $("#ParentName").text("");
            });
            menuChangeEvent();
            $("#MenuLink").change(menuChangeEvent);
            function menuChangeEvent() {
                var selectedValue = $("#MenuLink option:selected").val();
                if (selectedValue == 'pages-index') {
                    $("#pageThemeWrapper").show();
                } else {
                    $("#pageThemeWrapper").hide();
                }
            }


        });
    </script>
}
