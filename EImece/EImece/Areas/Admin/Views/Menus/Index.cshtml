@model IEnumerable<EImece.Domain.Entities.Menu>
@using SharkDev.MVC

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>

<div ng-controller="MenusTreeController" class="row" style="padding:20px;">

    <div class="col-md-3">

        @Html.SharkDev().TreeView(settings =>
    {
        settings.Id = "treeViewContainer";
        settings.Header.Text = "Tree root - Animal";
        settings.Header.Visible = false;
        settings.Header.Expanded = true;
        settings.ClientHandlers.ContentSelect = "function (e) { console.log(e); }";
        settings.AutoCompleteHandler = Url.Content("~/Home/GetBySample");
        settings.Height = 300;
        settings.Width = 270;
        settings.DataOnClient = true;
    }).GetContent(ViewBag.Tree)

        <span id="treeClickContainer"></span>


    </div>
    <div class="col-md-9">


        <p>
            @Html.ActionLink("Create New", "SaveOrEdit")
        </p>
        <table class="table table-bordered table-hover table-responsive table-responsive" >
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreatedDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.UpdatedDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.IsActive)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Position)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreatedDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UpdatedDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IsActive)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Position)
                    </td>
             
                    <td>
                        @Html.ActionLink("Edit", "SaveOrEdit", new { id = item.Id }) |
                        @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                    </td>
                </tr>
            }

        </table>
    </div>

</div>