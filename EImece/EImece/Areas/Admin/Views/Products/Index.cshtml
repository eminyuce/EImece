@model List<Product>
@using EImece.Domain.Helpers;
@using SharkDev.MVC
@using GridMvc.Html
@using GridMvc.Sorting
@using EImece.Domain;
@using Resources;
@using EImece.Domain.Entities;
@using EImece.Domain.Helpers.Extensions;


@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";

    int pageSizeNumber = Request.QueryString["GridPageSize"].ToInt();
    pageSizeNumber = pageSizeNumber == 0 ? Settings.GridPageSizeNumber : pageSizeNumber;
    var controllerName = "Products";
    var title = "Products";
    var gridName = "productGrid";
    var contents = Model;
    int selectedCategoryId = (int)ViewBag.SelectedCategoryId;
    var products = Model;
    var baseList = contents.DownCasting<Product>();

    var gridImagesText = AdminResource.GridImagesText;
    var gridEditText = AdminResource.GridEditText;
    var gridDeleteText = AdminResource.GridDeleteText;
    var gridDetailText = AdminResource.GridDetailText;

    Setting isProductPriceEnable = ViewBag.IsProductPriceEnable;

}
<h2>@AdminResource.ProductPageTitle</h2>
<hr class="adminLine" />

<div class="row" style="padding:20px;">

    <div class="col-md-2">


        @Html.SharkDev().TreeView(settings =>
    {
        settings.Id = "treeViewContainer";
        settings.Header.Visible = false;
        settings.Header.Expanded = true;
        settings.ClientHandlers.ContentSelect = @"function (e) {
console.log(e);
window.location='/admin/products/index/'+e.id;
}";
        settings.AutoCompleteHandler = Url.Content("~/Home/GetBySample");
        settings.DataOnClient = true;
    }).GetContent(ViewBag.Tree)

        <span id="treeClickContainer"></span>


    </div>
    <div class="col-md-10">

        @if (selectedCategoryId > 0)
        {
            <span>
                @{
                    var product = products.FirstOrDefault();
                    if (product != null)
                    {
                        <span>
                            Selected Category:
                        </span>
                        <b>

                          @String.Format("{0}", product.ProductCategory.Name)
                        </b>
       
                    }
                }
                @Html.ActionLink(AdminResource.AllProductLinkText, "Index", "Products", new { @id = 0 }, new { @class = "btn btn-sm btn-link" })


            </span>

                    }


        @Html.ActionLink(AdminResource.ExportToExcel, "ExportExcel", new { @id = 0 }, new { @class = "btn btn-sm btn-link" })


        @Html.Partial("pGridOperations", new ViewDataDictionary(ViewData){
                            {"controllerName",controllerName}
            ,{"StateTypes","State,ImageState,MainPage"}
           ,{"orderingButton",true}
           ,{"selectAll",true}
           ,{"deleteAll",true}
            ,{"SetStateOnOrOff",true}})



        <div class="panel panel-primary">
            @Html.Partial("pGridDropDown", baseList)

            @Html.Grid(contents).Named(gridName).Columns(columns =>
       {



       columns.Add(o => o.Id, true);





       columns.Add()
                      .Encoded(false)
                      .Sanitized(false)
                      .SetWidth(30)
                      .RenderValueAs(d =>
                    @<ul class="gridToolBox">
                        <li>
                            @Html.Raw(String.Format("<input gridkey-id='{0}' class='gridCheckboxes' name='checkboxGrid' type='checkbox'>", d.Id))

                        </li>
                        <li>
                            @Html.ActionLink(" ", "Media", controllerName, new { Id = d.Id }, new { @class = "gridBtn btn  btn-default     glyphicon glyphicon-camera glyphicon-white " })
                        </li>
                        <li>
                            @Html.ActionLink(" ", "SaveOrEdit", controllerName, new { id = d.Id }, new { @class = "gridBtn btn btn-primary   glyphicon glyphicon-pencil glyphicon-white " })
                        </li>
                        <li>
                            @Html.ActionLink(" ", "SaveOrEditProductSpecs", controllerName, new { Id = d.Id }, new { @class = "gridBtn btn  btn-default   glyphicon glyphicon-plus" })


                        </li>
                        @if (UserRoleHelper.IsDeletedEnableRoles())
                        {
                            <li>
                                @Html.ActionLink(" ", "Delete", controllerName,
                           new { id = d.Id },
                          new { @class = "gridBtn btn btn-danger glyphicon  glyphicon-remove-circle" })

                            </li>

                        }

                    </ul>);





           columns.Add(c => c.Name)
                  .Titled(AdminResource.Name)
                  .Filterable(true)
                   .Encoded(false)
                    .Sanitized(false)
              .RenderValueAs(d =>
            @<b>
                @Html.ActionLink(d.Name, "Detail", "Products", new { area = "", categoryName = GeneralHelper.GetUrlSeoString(d.ProductCategory.Name), id = d.GetSeoUrl() }, new {  @class = "btn btn-sm btn-link", @target = "_blank" })
                 <div style="text-align: center;clear: right;">
                     <a style="" href="javascript:void(0);" class="" 
                        
                        data-product-detail="@d.Id">More info...</a>
                 </div>
            <span data-product-detail-result="@d.Id">

            </span>
            </b>);


           if (isProductPriceEnable.SettingValue.ToBool(true))
           {
               columns.Add(c => c.Price).Titled(AdminResource.Price);

           }

            
           columns.Add(c => c.ProductCode)
           .Titled(AdminResource.ProductCode);

           columns.Add(o => o.Position)
              .Encoded(false).
                   Sanitized(false).
                   Css("smallGridColumn").
                   SetWidth(10).
                   RenderValueAs(o => String.Format("<input   gridkey-id='{0}' value='{1}'   class='GridOrderingTextbox input-xs' name='gridOrdering' type='type'>", o.Id, o.Position));



           columns.Add(o => o.IsActive)
                  .Titled(AdminResource.State)
                  .Sortable(true)
                  .Css("smallGridColumn")
                  .SortInitialDirection(GridSortDirection.Descending).Encoded(false).
                   Sanitized(false)
                  .RenderValueAs(o =>
                @<ul>
                    <li>
                        @Html.Raw(String.Format("<div>Active</div><span gridkey-id='{0}' grid-data-value='{2}' {1} name='spanState'></span>",
                                                    o.Id, (o.IsActive ? Settings.OkStyle : Settings.CancelStyle), o.IsActive))


                    </li>
                    <li>
                        @Html.Raw(String.Format("<div>Main Page</div><span gridkey-id='{0}' grid-data-value='{2}' {1} name='spanMainPage'></span>",
                                                    o.Id, (o.MainPage ? Settings.OkStyle : Settings.CancelStyle), o.MainPage))



                    </li>
                </ul>

                                                    );




       columns.Add(r => r.ImageState
       )
   .Titled(AdminResource.Images)
   .Encoded(false)
   .Sanitized(false)
           .Css("smallGridColumn")
   .SetWidth(30)
   .RenderValueAs(o =>
@<ul>
    <li>
        @Html.Raw(String.Format("<div>Image State</div><span gridkey-id='{0}' grid-data-value='{2}' {1} name='spanImageState'></span>",
                                                    o.Id, (o.ImageState ? Settings.OkStyle : Settings.CancelStyle), o.ImageState))



    </li>
    <li>
        @Html.Partial("pGridImageMainPage", o)
    </li>
</ul>
       );



       }).SetRowCssClasses(item => item.Id % 2 == 0 ? "warning" : string.Empty).WithPaging(pageSizeNumber).Sortable().Filterable().WithMultipleFilters().Selectable(false)

        </div>



    </div>
</div>

@section Scripts{
    <script>



        $(document).ready(function () {




        });
    </script>
}


