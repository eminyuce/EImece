@model List<Product>
@using EImece.Domain.Helpers;
@using SharkDev.MVC
@using GridMvc.Html
@using GridMvc.Sorting
@using EImece.Domain;
@using Resources;
@using EImece.Domain.Entities;
@using EImece.Domain.Helpers.Extensions;

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";

    int pageSizeNumber = Request.QueryString["GridPageSize"].ToInt();
    pageSizeNumber = pageSizeNumber == 0 ? Settings.GridPageSizeNumber : pageSizeNumber;
    var controllerName = "Products";
    var title = "Products";
    var gridName = "productGrid";
    var contents = Model;

    var baseList = contents.DownCasting<Product>();

    var gridImagesText = AdminResource.GridImagesText;
    var gridEditText = AdminResource.GridEditText;
    var gridDeleteText = AdminResource.GridDeleteText;
    var gridDetailText = AdminResource.GridDetailText;

}

<h2>Products</h2>


<div class="row" style="padding:20px;">

    <div class="col-md-3">

        @Html.ActionLink("All", "Index", "Products", new { @id = 0 }, new { @class = "btn btn-link" })

        @Html.SharkDev().TreeView(settings =>
    {
        settings.Id = "treeViewContainer";
        settings.Header.Text = "Tree root - Animal";
        settings.Header.Visible = false;
        settings.Header.Expanded = true;
        settings.ClientHandlers.ContentSelect = @"function (e) {
console.log(e);
window.location='/admin/products/index/'+e.id;
}";
        settings.AutoCompleteHandler = Url.Content("~/Home/GetBySample");
        settings.Height = 300;
        settings.Width = 270;
        settings.DataOnClient = true;
    }).GetContent(ViewBag.Tree)

        <span id="treeClickContainer"></span>


    </div>
    <div class="col-md-9">
        @Html.ActionLink( AdminResource.ExportToExcel, "ExportExcel", new { @id = 0 }, new { @class = "btn btn-link" })


        @Html.Partial("pGridOperations", new ViewDataDictionary(ViewData){
            {"controllerName",controllerName}
            ,{"StateTypes","State,ImageState,MainPage"}
           ,{"orderingButton",true}
           ,{"selectAll",true}
           ,{"deleteAll",true}
            ,{"SetStateOnOrOff",true}})



        <div class="panel panel-primary">
            @Html.Partial("pGridDropDown", baseList)

            @Html.Grid(contents).Named(gridName).Columns(columns =>
       {

       columns.Add().Encoded(false).
               Sanitized(false).
               SetWidth(10).
               RenderValueAs(o => String.Format("<input gridkey-id='{0}'  class='gridCheckboxes'  name='checkboxGrid' type='checkbox'>", o.Id));

       columns.Add(o => o.Id, true);


       columns.Add()
         .Encoded(false)
         .Sanitized(false)
         .SetWidth(30)
         .RenderValueAs(d =>
        @<b>
            @Html.ActionLink(" ", "SaveOrEdit", controllerName, new { id = d.Id }, new { @class = "btn btn-primary   glyphicon glyphicon-pencil glyphicon-white " })
        </b>);


           columns.Add()
                          .Encoded(false)
                          .Sanitized(false)
                          .SetWidth(30)
                          .RenderValueAs(d =>
                        @<b>
                            @Html.ActionLink(" ", "SaveOrEditProductSpecs", controllerName, new { Id = d.Id }, new { @class = "btn btn-default   glyphicon glyphicon-plus" })
                        </b>);




       columns.Add()
              .Encoded(false)
              .Sanitized(false)
              .SetWidth(30)
              .RenderValueAs(d =>
            @<b>
                @Html.ActionLink(" ", "Media", controllerName, new { Id = d.Id }, new { @class = "btn btn-default     glyphicon glyphicon-camera glyphicon-white " })
            </b>);

           if (UserRoleHelper.IsDeletedEnableRoles())
           {
               columns.Add()
                        .Encoded(false)
                        .Sanitized(false)
                        .SetWidth(30)
                        .RenderValueAs(d =>
                        @<b>
                            @Html.ActionLink(" ", "Delete", controllerName, new { id = d.Id }, new { @class = "btn btn-danger   glyphicon glyphicon-trash glyphicon-white" })
                        </b>);
           }
           columns.Add(c => c.Name)
                  .Titled(AdminResource.Name)
                  .Filterable(true)
                   .Encoded(false)
                    .Sanitized(false)
              .RenderValueAs(d =>
            @<b>
                @Html.ActionLink(d.Name, "Detail", "Products", new { area = "", categoryName = GeneralHelper.GetUrlSeoString(d.ProductCategory.Name), id = d.GetSeoUrl() }, new { @class = "btn btn-link", @target = "_blank" })
            </b>);


           columns.Add(c => c.ProductCategory.Name)
             .Titled(AdminResource.ProductCategoryId);
           columns.Add(c => c.Price)
        .Titled(AdminResource.Price);


           columns.Add(c => c.ProductCode)
           .Titled(AdminResource.ProductCode);

           columns.Add(o => o.Position)
              .Encoded(false).
                   Sanitized(false).
                   SetWidth(10).
                   RenderValueAs(o => String.Format("<input   gridkey-id='{0}' value='{1}'   class='GridOrderingTextbox input-xs' name='gridOrdering' type='type'>", o.Id, o.Position));

           columns.Add(o => o.IsActive)
                  .Titled(AdminResource.State)
                  .Sortable(true)
                  .SortInitialDirection(GridSortDirection.Descending).Encoded(false).
                   Sanitized(false)
                  .RenderValueAs(o => String.Format("<span  gridkey-id='{0}' grid-data-value='{2}' {1}   name='spanState'> </span>",
                                                    o.Id, (o.IsActive ? Settings.OkStyle : Settings.CancelStyle), o.IsActive));

           columns.Add(o => o.ImageState)
                  .Titled(AdminResource.ImageState)
                  .Sortable(true)
                  .SortInitialDirection(GridSortDirection.Descending).Encoded(false).
                   Sanitized(false)
                  .RenderValueAs(o => String.Format("<span  gridkey-id='{0}' grid-data-value='{2}'  {1}  name='spanImageState'></span>",
                                                    o.Id, (o.ImageState ? Settings.OkStyle : Settings.CancelStyle), o.ImageState));



           columns.Add(o => o.MainPage)
                  .Titled(AdminResource.MainPage)
                  .Sortable(true)
                  .SortInitialDirection(GridSortDirection.Descending).Encoded(false).
                   Sanitized(false)
                  .RenderValueAs(o => String.Format("<span  gridkey-id='{0}'  grid-data-value='{2}' {1} name='spanMainPage' ></span>",
                                                    o.Id, (o.MainPage ? Settings.OkStyle : Settings.CancelStyle), o.MainPage));



           columns.Add(o => o.CreatedDate)
                  .Titled(AdminResource.CreatedDate)
                  .Sortable(true)
                  .Css("gridDateClass")
                  .RenderValueAs(o => o.CreatedDate != null ? String.Format("{0}", o.CreatedDate.Value.ToShortDateString()) : null)
                  .SortInitialDirection(GridSortDirection.Descending);



           columns.Add()
       .Titled(AdminResource.Images)
       .Encoded(false)
       .Sanitized(false)

       .SetWidth(30)
       .RenderValueAs(d => Html.Partial("pGridImageMainPage", d));



       }).SetRowCssClasses(item => item.Id % 2 == 0 ? "warning" : string.Empty).WithPaging(pageSizeNumber).Sortable().Filterable().WithMultipleFilters().Selectable(false)

        </div>



    </div>
</div>

@section Scripts{
    <script>



        $(document).ready(function () {




        });
    </script>
}


