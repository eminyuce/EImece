@model List<Subscriber>
@using EImece.Domain.Helpers;
@using GridMvc.Html
@using GridMvc.Sorting;
@using EImece.Domain;
@using EImece.Domain.Models.Enums;
@using EImece.Domain.Entities;
@using Resources;
@using EImece.Domain.Helpers.Extensions;
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";

    int pageSizeNumber = Request.QueryString["GridPageSize"].ToInt();
    pageSizeNumber = pageSizeNumber == 0 ? Settings.GridPageSizeNumber : pageSizeNumber;
    var controllerName = "Subscribers";
    var title = "Subscribers";
    var gridName = "SubscriberGrid";
    var contents = Model;
    var baseList = contents.DownCasting();
    var search = Request.QueryString["search"].ToStr();
    var ExportToExcel = AdminResource.ExportToExcel;
}

<h2>@title</h2>
@Html.ActionLink(ExportToExcel, "ExportSubscribers", new {  }, new { @class = "btn btn-default btn-xs" })
<div class="panel panel-info">
    @Html.Partial("pGridOperations", new ViewDataDictionary(ViewData){
            {"controllerName",controllerName}
            ,{"StateTypes","State"}
           ,{"orderingButton",false}
           ,{"selectAll",true}
           ,{"deleteAll",true}
            ,{"SetStateOnOrOff",true},
    { "IsNewRecordButtonEnabled",false}})
</div>
<div class="panel panel-primary">
    @Html.Partial("pGridDropDown", baseList)

    @Html.Grid(contents).Named(gridName).Columns(columns =>
{

    columns.Add().Encoded(false).
            Sanitized(false).
            SetWidth(10).
            RenderValueAs(o => String.Format("<input gridkey-id='{0}'  class='gridCheckboxes'  name='checkboxGrid' type='checkbox'>", o.Id));

    columns.Add(o => o.Id, true);



    columns.Add(c => c.Name)
           .Titled("Title")
           .Filterable(true);

    columns.Add(c => c.Email)
     .Titled("Email")
     .Filterable(true);


    columns.Add(o => o.Note)
   .Encoded(false).
        Sanitized(false).
        SetWidth(10).
        RenderValueAs(o => String.Format("<textarea readonly  style='height: 146px; background-color: transparent; width: 399px; margin: 0px;'>{0}</textarea>", o.Note));




    columns.Add(o => o.IsActive)
           .Titled(AdminResource.State)
       .Sortable(true)
       .SortInitialDirection(GridSortDirection.Descending).Encoded(false).
        Sanitized(false)
       .RenderValueAs(o => String.Format("<span  gridkey-id='{0}' grid-data-value='{2}' {1}   name='spanState'> </span>",
                                         o.Id, (o.IsActive ? Settings.OkStyle : Settings.CancelStyle), o.IsActive));



    columns.Add(o => o.UpdatedDate)
               .Titled(AdminResource.UpdatedDate)
           .Sortable(true)
           .Css("gridDateClass")
           .RenderValueAs(o => o.UpdatedDate != null ? String.Format("{0}", o.UpdatedDate.Value.ToShortDateString()) : null)
           .SortInitialDirection(GridSortDirection.Descending);




}).SetRowCssClasses(item => item.Id % 2 == 0 ? "warning" : string.Empty).WithPaging(pageSizeNumber).Sortable().Filterable().WithMultipleFilters().Selectable(false)

</div>

