@using EImece.Domain.Helpers;
@using GridMvc.Html
@using GridMvc.Sorting
@using EImece.Domain;
@using EImece.Domain.Entities;
@using Resources;
@using Newtonsoft.Json;
@using EImece.Domain.Models.FrontModels;
@using EImece.Domain.Helpers.Extensions;
@using EImece.Domain.Models.Enums;
@using System.Resources;
@model CustomerOrdersViewModel

@{
    Layout = "~/Areas/Customers/Views/Shared/_Layout.cshtml";
    var controllerName = "Home";
    var gridName = "OrderGrid";
    var myOrders = Model.Orders;
    var paginatedOrders = new PaginatedModelList<Order>(myOrders, Model.Page, Model.RecordPerPage, myOrders.Count);
    var baseList = myOrders.DownCasting<Order>();

    var gridImagesText = AdminResource.GridImagesText;
    var gridEditText = AdminResource.GridEditText;
    var gridDeleteText = AdminResource.GridDeleteText;
    var gridDetailText = AdminResource.GridDetailText;
    var gridMainPageImageText = AdminResource.GridMainPageImageText;

}

<!-- Page Content-->
<div class="container pt-lg-3 pb-5 mb-sm-3">
    <!-- Toast notifications-->
    <div class="toast-container toast-bottom-center">
        <div class="toast mb-3" id="profile-toast" data-delay="5000" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header bg-success text-white">
                <i class="mr-2" data-feather="check-circle" style="width: 1.25rem; height: 1.25rem;"></i><span class="font-weight-semibold mr-auto">Updated!</span>
                <button class="close text-white ml-2 mb-1" type="button" data-dismiss="toast" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="toast-body">@Resource.YourProfileUpdatedSuccessfully</div>
        </div>
    </div>
    <div class="row pt-1">
        <!-- Main content-->
        <!-- Main content-->
        <div class="col-lg-12">
            @Html.Partial("_CustomerDetails", (Customer)Model.Customer)

            <!-- Orders table-->
            <div class="table-responsive font-size-sm">
                <table class="table table-hover mb-0">
                    <thead>
                        <tr>
                            <th></th>
                            <th>@Resource.OrderStatus</th>
                            <th>@Resource.OrderNumber</th>
                            <th>@Resource.ShipmentCompanyName</th>
                            <th>@Resource.ShipmentTrackingNumber</th>
                            <th>@Resource.DatePurchased</th>
                            <th>@Resource.Total</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var o in paginatedOrders)
                        {
                        <tr>
                            <td>
                                @Html.ActionLink(Resource.OrderSummary,                
                                    "CustomerOrderDetail", "Home",new { id = o.Id },  
                                    new { @class = "btn btn-pill btn-outline-success", area="customers" })
                            </td>
                            <td>
                                <h5>@createOrderStatus(o)</h5>
                            </td>
                            <td>
                                @o.OrderNumber
                            </td>
                            <td>
                                @o.ShipmentCompanyName
                            </td>
                            <td>
                                @o.ShipmentTrackingNumber
                            </td>
                            <td>@o.CreatedDate.ToString("dddd, dd MMMM yyyy HH:mm:ss")</td>
                            <td>@o.PaidPriceDecimal.CurrencySign()</td>
                        </tr>
                        }
                    </tbody>
                </table>
            </div>
            <hr class="pb-4">
            @Html.Partial("_PaginatedOrderList", paginatedOrders)
        </div>
    </div>
</div>

@helper createOrderStatus(Order o)
{

var os = (EImeceOrderStatus)o.OrderStatus;
var rm = new ResourceManager(typeof(Resource));
var resourceDisplayName = rm.GetString(os.GetType().Name + "_" + os);
var orderStatusText = EImece.Domain.Helpers.EnumHelper.GetEnumDescription(os);
switch (os)
{
    case EImeceOrderStatus.NewlyOrder:
            <span class="badge badge-secondary m-0">@resourceDisplayName</span>
            break;
        case EImeceOrderStatus.InProgress:
            <span class="badge badge-warning m-0">@resourceDisplayName</span>
            break;
        case EImeceOrderStatus.Cancelled:
            <span class="badge badge-danger m-0">@resourceDisplayName</span>
            break;
        case EImeceOrderStatus.Returned:
            <span class="badge badge-info m-0">@resourceDisplayName</span>
            break;
        case EImeceOrderStatus.Delivered:
            <span class="badge badge-success m-0">@resourceDisplayName</span>
            break;
        default:
            break;
    }

}
 