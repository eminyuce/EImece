@using EImece.Domain.Entities;
@using EImece.Domain.Helpers;
@using EImece.Domain.Models.Enums;
@using EImece.Domain.Helpers.Extensions;
@using Resources;
@using EImece.Domain.Models.FrontModels;
@model ContactUsFormViewModel

@{
    var SendButtonText = Resource.SendButtonText;
}


@using (Html.BeginForm("SendContactUs", "Home", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ContactFormType)
    @Html.HiddenFor(model => model.ItemId)
    @Html.HiddenFor(model => model.ItemType)
    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "alert alert-success" })

        <div class="form-group">
            @Html.LabelFor(model => model.Reasons, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                <select class="form-control custom-select" required="" id="help-topic">
                    <option value="">—</option>
                    <option value="Managing Account">Managing Account</option>
                    <option value="Working with Dashboard">Working with Dashboard</option>
                    <option value="Payment Methods">Payment Methods</option>
                    <option value="Delivery Information">Delivery Information</option>
                    <option value="Refund Policy">Refund Policy</option>
                </select>
                @Html.ValidationMessageFor(model => model.Reasons, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrderNumber, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrderNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrderNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Message, new { @rows = "5", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="row">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.Captcha, htmlAttributes: new { @class = "control-label " })
                </div>
                <div class="col-md-3">
                    <img rel="nofollow"
                         src="@Url.Action("GetCaptcha", "Images", new { area="", prefix = "ContactUsLogin" })" alt="Captcha" />
                </div>
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.Captcha, new { @class = "form-control", @autocomplete = "false" })
                    @Html.ValidationMessageFor(model => model.Captcha)
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@SendButtonText" class="btn btn-info btn-block" />
            </div>
        </div>
    </div>
}