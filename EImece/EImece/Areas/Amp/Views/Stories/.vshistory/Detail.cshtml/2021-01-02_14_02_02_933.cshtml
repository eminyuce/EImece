@model EImece.Domain.Models.FrontModels.StoryDetailViewModel
@using EImece.Domain.Entities;
@using EImece.Domain.Helpers.HtmlHelpers;
@using EImece.Domain.Helpers.Extensions;
@using EImece.Domain.Helpers;
@using EImece.Domain;
@using Resources;
@using EImece.Domain.Helpers.Infrastructure;
@{
    var story = Model.Story;
    ViewBag.Title = story.GetSeoTitle();
    ViewBag.Description = story.GetSeoDescription();
    ViewBag.Keywords = story.GetSeoKeywords();
    Layout = "~/Areas/Amp/Views/Shared/_Layout.cshtml";
    var storyFiles = story.StoryFiles.ToList();
    var storyTags = story.StoryTags.Select(r => r.Tag).ToList();
    var storyCategory = story.StoryCategory;
    var isUserAuthenticated = User.Identity.IsAuthenticated && Settings.IsEditLinkEnable;

    var relatedStories = Model.RelatedStories.OrderBy(x => Guid.NewGuid()).Take(4).ToList();
    var RelatedProducts = Model.RelatedProducts.OrderBy(x => Guid.NewGuid()).Take(8).ToList();
    var tags = Model.Tags;
}

<section class="titlebar">
    <div class="container">
        <div class="sixteen columns">
            <h2>@story.Name</h2>

            <nav id="breadcrumbs">
                <ul>
                    @if (Model.MainPageMenu != null && Model.MainPageMenu.IsActive)
                    {
                        <li>@Html.ActionLink(Model.MainPageMenu.Name, "Index", "Home")</li>
                    }
                    @if (Model.BlogMenu != null && Model.BlogMenu.IsActive)
                    {
                        var m = Model.BlogMenu;
                        var p = m.MenuLink.Split("_".ToCharArray());
                        var parts = p.First().Split("-".ToCharArray());
                        var action = parts[1];
                        var controller = parts[0];
                        String mid = "";
                        mid = p.Last();
                        <li>

                            @Html.ActionLink(m.Name, action, controller, new
                       {
                           id = mid
                       }, null)
                        </li>
                    }
                    <li>@story.Name</li>
                </ul>
            </nav>
        </div>
    </div>
</section>

<!-- Container -->
<div class="container">

    <div class="twelve columns">
        <div class="extra-padding">

            <!-- Post -->
            <article class="post single">

                <figure class="post-img">
                    @Html.Raw(story.GetCroppedImageTag(860, 405))
                </figure>

                <section class="date">
                    <span class="day">@story.CreatedDate.Day</span>
                    <span class="month">@story.CreatedDate.ToString("MMM")</span>
                </section>

                <section class="post-content">

                    <header class="meta">
                        <h2>
                            @story.Name
                    </h2>
                    <h4>
                        @storyCategory.Name
                    </h4>
                </header>
                @Html.Raw(story.Description)

                <div class="clearfix"></div>
            </section>
        </article>

        <div class="clearfix"></div>
        <br>
    </div>
</div>

<!-- Sidebar
================================================== -->
<div class="four columns">

    <!-- Share Buttons -->

    <div class="widget">
        <h3 class="headline">@Resource.SocialMedia</h3><span class="line"></span><div class="clearfix"></div>
        <div class="share-buttons">
            @Html.Partial("_SocialMediaShareLinks", new ViewDataDictionary(ViewData){
                              {"DataUrl",Request.Url.AbsoluteUri.ToString()}, {"DataTitle",story.Name  } })
        </div>
    </div>

    <br>
    <br>
</div>
</div>

@*@section top_head {
        @{String seoId = (String)ViewBag.SeoId;
            var canonical = SeoUrlHelper.GetCanonicalUrl(this.ViewContext, seoId);
            var image = story.Images.FirstOrDefault();
            var imgJson = image != null ?
                String.Format(",\"image\": {{ \"@type\": \"ImageObject\", \"url\": \"{0}\",\"height\": {1},\"width\": {2} }}", image.OriginalSrc, image.OriginalHeight, image.OriginalWidth)
                : "";

        }
        <script type="application/ld+json">
            {
            "@@context": "http://schema.org",
            "@@type": "NewsArticle",
            "mainEntityOfPage": "@canonical",
            "headline": "@story.Title",
            "datePublished": "@story.DateUpdated.ToString("u")",
            "dateModified": "@story.DateUpdated.ToString("u")",
            "description": "@story.Description",
            "author": {
            "@@type": "Person",
            "name": "@story.Author"
            },
            "publisher": {
            "@@type": "Organization",
            "name": "My web site News",
            "logo": {
            "@@type": "ImageObject",
            "url": "https://www.blog.google/images/download/DvujqGIr46dew-phGARpDy8bMSQ=/1095/original/Google_Logo.png",
            "width": 137,
            "height": 60
            }
            }@Html.Raw(imgJson)
            }
        </script>

    }*@

@section delayed_head {

    @*

    Scripts inserted from partial, ex:  if 2 partial on page it will be inserted twice…
    So this helps prevents duplicates, probably copied from:

            https://stackoverflow.com/questions/7556400/injecting-content-into-specific-sections-from-a-partial-view-asp-net-mvc-3-with

        *@

    @Html.RenderDelayed()
    @Html.RenderDelayed("amp", onlyUnique: true)

}