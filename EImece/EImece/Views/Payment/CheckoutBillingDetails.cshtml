@using EImece.Domain.Models.FrontModels;
@using EImece.Domain.Entities;
@using EImece.Domain.Helpers.HtmlHelpers;
@using EImece.Domain.Helpers.Extensions;
@using EImece.Domain.Helpers;
@using EImece.Domain;
@using Resources;
@model  ShoppingCartSession

@{
    ViewBag.Title = "CheckoutBillingDetails";
    var products = Model.ShoppingCartItems;
    var customer = Model.Customer;
}


<section class="titlebar">
    <div class="container">
        <div class="sixteen columns">
            <h2>Checkout</h2>

            <nav id="breadcrumbs">
                <ul>
                    <li><a href="#">Home</a></li>
                    <li><a href="#">Shop</a></li>
                    <li><a href="#">Checkout</a></li>
                    <li>Billing Details</li>
                </ul>
            </nav>
        </div>
    </div>
</section>

<div class="container">

    <div class="eight columns">

        <!-- Billing Details Content -->
        <div class="checkout-section active"><span>1</span> Billing Details</div>



        @using (Html.BeginForm("SaveCustomer", "Payment", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
    <div class="checkout-content">
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "alert alert-success" })

        <div class="half first">
            <label>First Name: <abbr>*       </abbr></label>
            @Html.EditorFor(model => customer.Name)
            @Html.ValidationMessageFor(model => customer.Name, "", new { @class = "text-danger" })
        </div>
        <div class="half">
            <label>Last Name: <abbr>*</abbr></label>
            @Html.EditorFor(model => customer.Surname)
            @Html.ValidationMessageFor(model => customer.Surname, "", new { @class = "text-danger" })
        </div>
        <div class="half first">
            <label>Email Adress: <abbr>*</abbr></label>
            @Html.EditorFor(model => customer.Email)
            @Html.ValidationMessageFor(model => customer.Email, "", new { @class = "text-danger" })
        </div>
        <div class="half">
            <label>Phone: <abbr>*</abbr></label>
            @Html.EditorFor(model => customer.GsmNumber)
            @Html.ValidationMessageFor(model => customer.GsmNumber, "", new { @class = "text-danger" })
        </div>
        <div class="half first">
            <label>City:<abbr>*</abbr></label>
            @Html.EditorFor(model => customer.City)
            @Html.ValidationMessageFor(model => customer.ZipCode, "", new { @class = "text-danger" })
        </div>
        <div class="half ">
            <label>Postcode / Zip:<abbr>*</abbr></label>
            @Html.EditorFor(model => customer.ZipCode)
            @Html.ValidationMessageFor(model => customer.ZipCode, "", new { @class = "text-danger" })
        </div>
        <div class="half first">
            <label>Country:<abbr>*</abbr></label>
            @Html.EditorFor(model => customer.Country)
            @Html.ValidationMessageFor(model => customer.Country, "", new { @class = "text-danger" })
        </div>
        <div class="fullwidth">
            <label>Street Address: <abbr>*</abbr></label>
            @Html.TextAreaFor(model => customer.RegistrationAddress, 3, 40, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => customer.RegistrationAddress, "", new { @class = "text-danger" })
        </div>


        <div class="clearfix"></div>



        <span class="shippping-checkbox">
            @Html.CheckBoxFor(model => customer.IsSameAsShippingAddress, new { @class = "input-checkbox" })
            <label for="shipping-address" class="checkbox">Billing address is same as shipping address</label>
        </span>
        <div class="clearfix"></div>


    </div>
            <div class="clearfix"></div>
            <input type="submit" name="saveButton" value="Continue" class="continue button color" />
        }

        <a href="@Url.Action("CheckoutDelivery")"><div class="checkout-section"><span>2</span> Delivery</div></a>
        <a href="checkout-payment-order-review.html"><div class="checkout-section"><span>3</span> Payment &amp; Order Review</div></a>
    </div>
    <!-- Billing Details / Enc -->
    <!-- Checkout Cart -->
    <div class="eight columns">
        @Html.Partial("ShoppingCartTemplates/_ShoppingCartProducts", Model)
    </div>
    <!-- Checkout Cart / End -->


</div>


@section Scripts{
    <script id="CityHtml" type="text/template">
       
            {{ #items}}
            <option value="{{id}}">
                {{name}}
            </option>
            {{/items}}
    
    </script>
    <script id="optionHtml" type="text/template">
        <select id="il_select">
            {{ #items}}
            <option value="{{id}}">
                {{name}}
            </option>
            {{/items}}
        </select>
    </script>

    <script>


        $(document).ready(function () {

          //  GetIller();
            function GetIller() {
                var postData = JSON.stringify({});
                console.log(postData);
                ajaxMethodCall(postData, "/Ajax/GetIller", function (data) {

                    $.each(data, function (key, value) {
                        $.each(value, function (key1, value1) {
                            $("#customer_Country").add(new Option(value1.name, value1.id));
                        });
                    });

                
                    $("#il_select").on('change', function () {
                        GetIlceler(this.value);
                    });
                    var il_id = $("#il_select").val();
                    if (il_id === null) {
                        il_id = 1;
                    }
                    GetIlceler(il_id);
                });

                function GetIlceler(il_id) {
                    var postData = JSON.stringify({ il_id: il_id });
                    console.log(postData);
                    ajaxMethodCall(postData, "/Ajax/GetIlceler", function (data) {
                        var p = $('#optionHtml').html();
                        $("#ilceler").html(Mustache.render(p, data))
                    });
                }
            }
        });
    </script>
}