@using EImece.Domain.Models.FrontModels;
@using EImece.Domain.Entities;
@using EImece.Domain.Helpers.HtmlHelpers;
@using EImece.Domain.Helpers.Extensions;
@using EImece.Domain.Helpers;
@using EImece.Domain;
@using Resources;
@model  ShoppingCartSession

@{
    ViewBag.Title = "ShoppingCart";
    var products = Model.ShoppingCartItems;
}

<section class="titlebar">
    <div class="container">
        <div class="sixteen columns">
            <h2>Shopping Cart</h2>

            <nav id="breadcrumbs">
                <ul>
                    <li><a href="#">Home</a></li>
                    <li>Shopping Cart</li>
                </ul>
            </nav>
        </div>
    </div>
</section>
<div class="container cart">

    <div class="sixteen columns">



        <table class="cart-table responsive-table stacktable large-only">
            <tbody>
                <tr>
                    <th>Item</th>
                    <th>Description</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Total</th>
                    <th></th>
                </tr>


                @if (!products.IsNullOrEmpty())
                {
                    for (int i = 0; i < products.Count; i++)
                    {
                        var item = products[i];
                        var product = item.product;
                        double totalPricePerItem = product.Price * item.quantity;

                        <tr data-shopping-item-row="@item.ShoppingCartItemId">
                            <td>
                                <input type="hidden" name=@String.Format("productId[{0}]", i) value="@item.product.Id">
                                @if (product.MainImageId.HasValue && product.ImageState)
                                {
                                    <img class="rsImg" src="@product.GetCroppedImageUrl(product.MainImageId.Value, 80, 80)" alt="" />
                                }
                            </td>
                            <td class="cart-title"><a href="@Url.Action("Detail","Products",new { id=product.Id })">@product.Name</a></td>
                            <td>
                                <input type="hidden" data-shopping-item-price="@item.ShoppingCartItemId" value="@product.Price" />
                                <span> @product.Price.CurrencySign()</span>

                            </td>
                            <td>
                                <input type="text" name=@String.Format("quantity[{0}]", i)
                                       data-shopping-quantity-id="@item.ShoppingCartItemId"
                                       value="@item.quantity" autocomplete='off'
                                       class="qty">
                            </td>
                            <td class="cart-total"><span data-shopping-item-total-price="@item.ShoppingCartItemId"  > @totalPricePerItem.CurrencySign()</span></td>
                            <td><a data-shopping-item-remove="@item.ShoppingCartItemId"  class="cart-remove"></a></td>
                        </tr>
                    }
                }

            </tbody>
        </table>

        <!-- Apply Coupon Code / Buttons -->
        <table class="cart-table bottom">

            <tbody>
                <tr>
                    <th>
                        <div class="cart-btns">
                            <a href="@Url.Action("CheckoutBillingDetails")" class="button color cart-btns proceed">@Resource.ProceedToCheckout</a>
                        </div>
                    </th>
                </tr>

            </tbody>
        </table>
    </div>


    <!-- Cart Totals -->
    <div class="eight columns cart-totals">
        <h3 class="headline">Cart Totals</h3><span class="line"></span><div class="clearfix"></div>

        <table class="cart-table margin-top-5">

            <tbody>

                <tr>
                    <th>Shipping and Handling</th>
                    <td>Free Shipping</td>
                </tr>

                <tr>
                    <th>Order Total</th>
                    <td><strong><span id="TotalPrice">@Model.TotalPrice.CurrencySign()</span></strong></td>
                </tr>

            </tbody>
        </table>
        <br>
        <!-- <a href="#" class="calculate-shipping"><i class="fa fa-arrow-circle-down"></i> Calculate Shipping</a> -->
    </div>

</div>

@section Scripts{


    <script>
     
        $(document).ready(function () {
            bindOnRemove();
            console.log("jquery is working");
            $('[data-shopping-quantity-id]').each(function () {
                $(this).off("blur");
                $(this).on("blur", function (e) {
                    var caller = e.target;
                    var shoppingItemId = $(caller).attr('data-shopping-quantity-id');
                    var itemPrice = $('[data-shopping-item-price=' + shoppingItemId + ']').val();
                    var quantity = caller.value;
                    var postData = JSON.stringify({ shoppingItemId: shoppingItemId, quantity: quantity });
                    console.log(postData);
                    ajaxMethodCall(postData, "/Payment/UpdateQuantity", function (data) {
                        var totalPrice = parseFloat(itemPrice) * quantity;
                        $('[data-shopping-quantity-id=' + shoppingItemId + ']').val(quantity);
                        console.log(totalPrice);
                        renderPrice(totalPrice, function (data) {
                            $('[data-shopping-item-total-price=' + shoppingItemId + ']').html(data.price);
                        });
                        bindCalcuateTotalPrice();
                    });
                });
            });

            function renderPrice(price,success) {
                var postData = JSON.stringify({ price: price });
                ajaxMethodCall(postData, "/Payment/RenderPrice", success);
            }

            function bindOnRemove() {
                $('[data-shopping-item-remove]').each(function () {
                    $(this).off("click");
                    $(this).on("click", function (e) {
                        e.preventDefault();
                        var caller = e.target;
                        var shoppingItemId = $(caller).attr('data-shopping-item-remove');
                        var postData = JSON.stringify({ shoppingItemId: shoppingItemId });
                        console.log(postData);
                        ajaxMethodCall(postData, "/Payment/RemoveCart", function (data) {
                            $('[data-shopping-item-row=' + shoppingItemId + ']').remove();
                            $('[data-shopping-home-page-item=' + shoppingItemId + ']').remove();
                            bindCalcuateTotalPrice();
                        });
                    });
                });
            }
            function bindCalcuateTotalPrice() {
                var grandTotalPrice = 0;
                $('[data-shopping-item-row]').each(function () {
                    var shoppingItemId = $(this).attr('data-shopping-item-row');
                    var itemPrice = $('[data-shopping-item-price=' + shoppingItemId + ']').val();
                    var quantity = $('[data-shopping-quantity-id=' + shoppingItemId + ']').val();
                    var totalPrice = parseFloat(itemPrice) * quantity;
                    grandTotalPrice = grandTotalPrice + totalPrice;
                });
                var data = { totalPrice: grandTotalPrice };
                renderPrice(grandTotalPrice, function (data) {
                    $('#TotalPrice').html(data.price);
                    $('#HomePageTotalPrice').html(data.price);
                });
            }
        });

       
            

         

    </script>
}