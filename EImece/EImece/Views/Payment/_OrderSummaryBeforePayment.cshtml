@using EImece.Domain.Models.FrontModels;
@using EImece.Domain.Entities;
@using EImece.Domain.Helpers.HtmlHelpers;
@using EImece.Domain.Helpers.Extensions;
@using EImece.Domain.Helpers;
@using EImece.Domain;
@using Resources;
@model  ShoppingCartSession

@{
    ViewBag.Title = Resources.Resource.MyBasket;
    var products = Model.ShoppingCartItems;
}

<!-- Content-->
<div class="col-xl-9 col-md-8">

    <!-- Item-->
    <h2 class="h6 px-4 py-3 bg-secondary mb-4">@Resource.ReviewYourOrder</h2>
    @if (products.IsNotEmpty())
    {
        for (int i = 0; i < products.Count; i++)
        {
            @CreateShoppingCartItem(products[i], i)
        }
    }
    <!-- Navigation-->
</div>
<!-- Sidebar-->
<div class="col-xl-3 col-md-4 pt-4 mt-3 pt-md-0 mt-md-0">
    @if (Model.BasketMinTotalPriceForCargoInt > 0)
    {
        <span class="badge badge-pill badge-danger mr-2 mb-2">
            @Model.BasketMinTotalPriceForCargoInt.CurrencySign() @Resource.CargoFreeText
        </span>
    }

    <h2 class="h6 px-4 py-3 bg-secondary text-center">@Resource.OrderSummary</h2>
    <div class="font-size-sm border-bottom pt-2 pb-3">
        <div class="d-flex justify-content-between mb-2"><span>@Resource.MyBasket:</span><span id="TotalPrice">@Model.TotalPrice.CurrencySign()</span></div>
        @if (Model.Coupon != null)
        {
            <div class="d-flex justify-content-between mb-2"><span>@Resource.CouponCode:</span><span id="CouponName">@Model.CouponName</span></div>
        }
        <div id="CargoFreeTextInfo" class="d-flex justify-content-between mb-2">
            @if (Model.BasketMinTotalPriceForCargoInt > 0)
            {
                if (Model.TotalPrice > Model.BasketMinTotalPriceForCargoInt)
                {
                    <span class="badge badge-pill badge-danger mr-2 mb-2">
                        @Resource.CargoFreeTextInfo
                    </span>
                }
                else
                {
                    <span>@Resource.CargoPrice:</span><span>@Model.CargoPriceValue.CurrencySign()</span>
                }

            }
            else if (Model.CargoPriceValue > 0)
            {
                <span>@Resource.CargoPrice:</span><span>@Model.CargoPriceValue.CurrencySign()</span>
            }
            else
            {
                <span class="badge badge-pill badge-danger mr-2 mb-2">
                    @Resource.CargoFreeTextInfo
                </span>
            }
        </div>
    </div>

    <div class="h3 font-weight-semibold text-center py-3"><span>@Resource.Total:  </span><span id="TotalPriceWithCargoPrice">@Model.TotalPriceWithCargoPrice.CurrencySign()</span></div>

</div>



@helper CreateShoppingCartItem(ShoppingCartItem item, int i)
{
    var product = item.Product;
    var totalPricePerItem = product.Price * item.Quantity;

    <!-- Item-->
    <div class="d-sm-flex justify-content-between my-4 pb-4 border-bottom">
        <input type="hidden" name=@String.Format("productId[{0}]", i) value="@product.Id">
        <input type="hidden" data-shopping-item-price="@item.ShoppingCartItemId" value="@product.Price" />
        <div class="media d-block d-sm-flex text-center text-sm-left">
            @if (!String.IsNullOrEmpty(product.CroppedImageUrl))
            {
                <a class="cart-item-thumb mx-auto mr-sm-4" href="@product.DetailPageUrl">
                    <img src="@product.CroppedImageUrl" alt="Product">
                </a>
            }
            <div class="media-body pt-3">
                <h3 class="product-card-title font-weight-semibold border-0 pb-0">
                    <a href="@product.DetailPageUrl">@product.Name</a>
                </h3>
                <div class="font-size-sm"><span class="text-muted mr-2">@Resource.UnitPrice:</span>@product.Price.CurrencySign()</div>
                <div class="font-size-sm"><span class="text-muted mr-2">@Resource.ProductCategory:</span>@product.CategoryName</div>
                @if (product.ProductSpecItems.IsNotEmpty())
                {
                    foreach (var productSpecs in product.ProductSpecItems)
                    {
                        <div class="font-size-sm"><span class="text-muted mr-2">@productSpecs.SpecsName :</span>@productSpecs.SpecsValue </div>
                    }
                }
            </div>
        </div>
        <div class="pt-2 pl-sm-3 mx-auto mx-sm-0 text-center text-sm-left" style="max-width: 10rem;">
            <div class="font-size-sm mb-3"><span class="text-muted mr-2">@Resource.Quantity:</span><span class="font-weight-semibold">@item.Quantity</span></div>
            <div class="font-size-sm mb-3"><span class="text-muted mr-2">@Resource.Total:</span><span class="font-weight-semibold">@item.TotalPrice.CurrencySign()</span></div>
        </div>
    </div>

}
