@model ProductCategoryViewModel
@using EImece.Domain.Entities
@using EImece.Domain.Helpers.Extensions;
@using EImece.Domain.Helpers;
@using EImece.Domain.Models.FrontModels;
@using Resources;
@using EImece.Domain;
@using EImece.Domain.Helpers.HtmlHelpers;
@using EImece.Domain.Models.Enums;
@{

    ProductCategory category = Model.ProductCategory;
    var productsAll = Model.Products;
    var products = new PaginatedModelList<Product>(productsAll, Model.Page, Model.RecordPerPage, productsAll.Count);
    products.RouteId = category.Id;
    var ChildrenProductCategories = Model.ChildrenProductCategories.OrderBy(r => r.Position).ThenByDescending(r => r.UpdatedDate).ToList();

    ViewBag.Title = category.GetSeoTitle();
    ViewBag.Description = category.GetSeoDescription();
    var isUserAuthenticated = User.Identity.IsAuthenticated && AppConfig.IsEditLinkEnable;
}

<div class="page-title-wrapper" aria-label="Page title">
    <div class="container">
        <h1 class="page-title">@category.Name</h1><span class="d-block mt-2 text-muted"></span>
        <hr class="mt-4">
    </div>
</div>

<div class="container pb-5 mb-4">
    <div class="row">
        <div class="col-lg-3">
            <!-- Shop sidebar-->
            <div class="offcanvas-sidebar">
                <div class="offcanvas-sidebar-toggle">
                    <span class="toggle-knob">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none"
                             stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                             class="feather feather-chevrons-right">
                            <polyline points="13 17 18 12 13 7"></polyline>
                            <polyline points="6 17 11 12 6 7"></polyline>
                        </svg>Sidebar
                    </span>
                </div>
                <div class="offcanvas-sidebar-body">
                    <div class="offcanvas-sidebar-body-inner">

                        @Html.Partial("_ProductCategoryTreeHeadLine", Model.ProductCategoryTree)
                        <!-- Price range-->
                            @using (Html.BeginForm("Category", "Products", FormMethod.Get))
                            {
                                <div class="column">
                                    <button class="btn btn-outline-primary btn-sm" type="submit">Filter</button>
                                </div>
                                <!-- Price filter    -->
                                <div class="widget mb-4 pb-1">
                                    <h3 class="widget-title">Filter by price</h3>
                                    <div class="custom-control custom-checkbox mb-1">
                                        <input class="custom-control-input" type="checkbox" name="priceRange1" id="price-1">
                                        <label class="custom-control-label" for="price-1">$10 - $50<span class="text-muted ml-1">(208)</span></label>
                                    </div>
                                    <div class="custom-control custom-checkbox mb-1">
                                        <input class="custom-control-input" type="checkbox" id="price-2">
                                        <label class="custom-control-label" for="price-2">$50 - $100<span class="text-muted ml-1">(311)</span></label>
                                    </div>
                                    <div class="custom-control custom-checkbox mb-1">
                                        <input class="custom-control-input" type="checkbox" id="price-3">
                                        <label class="custom-control-label" for="price-3">$100 - $500<span class="text-muted ml-1">(485)</span></label>
                                    </div>
                                    <div class="custom-control custom-checkbox mb-1">
                                        <input class="custom-control-input" type="checkbox" id="price-4">
                                        <label class="custom-control-label" for="price-4">$500 - $1,000<span class="text-muted ml-1">(213)</span></label>
                                    </div>
                                    <div class="custom-control custom-checkbox mb-1">
                                        <input class="custom-control-input" type="checkbox" id="xs">
                                        <label class="custom-control-label" for="xs">$1,000 - $5,000<span class="text-muted ml-1">(197)</span></label>
                                    </div>
                                </div>
                                <!-- Brand filter    -->
                                <div class="widget mb-4 pb-1">
                                    <h3 class="widget-title">Filter by brand</h3>
                                    <div class="custom-control custom-checkbox mb-1">
                                        <input class="custom-control-input" type="checkbox" id="apple">
                                        <label class="custom-control-label" for="apple">Apple<span class="text-muted ml-1">(254)</span></label>
                                    </div>
                                    <div class="custom-control custom-checkbox mb-1">
                                        <input class="custom-control-input" type="checkbox" id="bosh">
                                        <label class="custom-control-label" for="bosh">Bosh<span class="text-muted ml-1">(39)</span></label>
                                    </div>
                                    <div class="custom-control custom-checkbox mb-1">
                                        <input class="custom-control-input" type="checkbox" id="canon">
                                        <label class="custom-control-label" for="canon">Canon Inc.<span class="text-muted ml-1">(128)</span></label>
                                    </div>
                                    <div class="custom-control custom-checkbox mb-1">
                                        <input class="custom-control-input" type="checkbox" id="dell">
                                        <label class="custom-control-label" for="dell">Dell<span class="text-muted ml-1">(310)</span></label>
                                    </div>
                                    <div class="custom-control custom-checkbox mb-1">
                                        <input class="custom-control-input" type="checkbox" id="hp">
                                        <label class="custom-control-label" for="hp">Hewlett-Packard<span class="text-muted ml-1">(46)</span></label>
                                    </div>
                                    <div class="custom-control custom-checkbox mb-1">
                                        <input class="custom-control-input" type="checkbox" id="hitachi">
                                        <label class="custom-control-label" for="hitachi">Hitachi<span class="text-muted ml-1">(217)</span></label>
                                    </div>
                                    <div class="custom-control custom-checkbox mb-1">
                                        <input class="custom-control-input" type="checkbox" id="lg">
                                        <label class="custom-control-label" for="lg">LG Electronics<span class="text-muted ml-1">(310)</span></label>
                                    </div>
                                    <div class="custom-control custom-checkbox mb-1">
                                        <input class="custom-control-input" type="checkbox" id="panasonic">
                                        <label class="custom-control-label" for="panasonic">Panasonic<span class="text-muted ml-1">(74)</span></label>
                                    </div>
                                    <div class="custom-control custom-checkbox mb-1">
                                        <input class="custom-control-input" type="checkbox" id="sony">
                                        <label class="custom-control-label" for="sony">Sony<span class="text-muted ml-1">(235)</span></label>
                                    </div>
                                </div>
                            }
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-9">
            <!-- Toolbar-->
            <div class="d-flex flex-wrap justify-content-center justify-content-sm-between pb-3">
                <div class="d-flex flex-wrap">
                    <div class="form-inline flex-nowrap mr-3 mr-sm-4 pb-3">
                        <label class="text-nowrap mr-2 d-none d-sm-block" for="sorting">Sort by:</label>
                        <div class="button-group tabs">
                            <a href="@category.ProductCategoryListPageUrl(SortingType.Newest)"
                               rel="nofollow" class="btn btn-pill btn-secondary mb-2 mr-1
                               @String.Format("{0}",Model.Sorting.Equals(SortingType.Newest)?"active":"")
                               ">En yeniler</a>
                            <a href="@category.ProductCategoryListPageUrl(SortingType.LowHighPrice)"
                               rel="nofollow" class="btn btn-pill btn-secondary mb-2 mr-1
                               @String.Format("{0}",Model.Sorting.Equals(SortingType.LowHighPrice)?"active":"")
                               ">En düşük fiyat</a>
                            <a href="@category.ProductCategoryListPageUrl(SortingType.HighLowPrice)" 
                               rel="nofollow" class="btn btn-pill btn-secondary mb-2 mr-1
                               @String.Format("{0}",Model.Sorting.Equals(SortingType.HighLowPrice)?"active":"")">En yüksek fiyat</a>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Products grid-->
            <div class="row no-gutters">
                @if (products.Any())
                {

                    foreach (var p in products.GetPagingResult())
                    {

                        @Html.DisplayFor(model => p, "FeaturedProductItem", new { Width = 300, Height = 300 })
                    }

                }
                else
                {

                    <div class="container">Bu kategoriye eklenmiş bir ürün yoktur.</div>
                }
            </div>
            <div class="pb-4 mb-2"></div>
            @Html.Partial("_PaginatedModelList", products)

        </div>
    </div>
</div>

@helper CreateProductItem(Product p)
{
    var imgTag = p.GetCroppedImageUrl(p.MainImageId, 80, 80);
    <!-- Product-->
    <div class="col-xl-3 col-sm-4 col-6 border border-collapse">
        <div class="product-card">
            <div class="product-thumb">
                <a class="product-thumb-link" href="@p.DetailPageUrl"></a>
                <span class="product-wishlist-btn" data-toggle="tooltip" data-placement="left" title=""
                      data-original-title="Add to wishlist">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                         viewBox="0 0 24 24" fill="none" stroke="currentColor"
                         stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                         class="feather feather-heart">
                        <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path>
                    </svg>
                </span>
                @if (!String.IsNullOrEmpty(imgTag))
                {
                    <img src="@imgTag" alt="Product">
                }
            </div>
            <div class="product-card-body">
                <div class="d-flex flex-wrap justify-content-between pb-1">
                    <a class="product-meta" href="@p.DetailPageUrl">@p.Name @p.Id</a>
                    <div class="star-rating">
                        <span class="sr-label mr-1">4.7</span>
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                             fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                             stroke-linejoin="round" class="feather feather-star sr-star active">
                            <polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2"></polygon>
                        </svg>
                    </div>
                </div>
                <h3 class="product-card-title">
                    <a href="@p.DetailPageUrl">@p.Name</a>
                </h3><span class="text-primary">@p.Price.CurrencySign()</span>
            </div>
            <div class="product-card-body body-hidden pt-2">
                <button class="btn btn-primary btn-sm btn-block" type="button" data-toggle="toast" data-target="#cart-toast">Add to cart</button>
                @if (!string.IsNullOrEmpty(p.ShortDescription))
                {
                    <ul class="font-size-sm opacity-80 pl-4 pt-2 mb-2">
                        <li>@p.ShortDescription</li>
                    </ul>
                }
            </div>
        </div>
    </div>

}