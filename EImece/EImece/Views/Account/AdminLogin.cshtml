@using EImece.Models
@model LoginViewModel
@using Resources;

@{
    ViewBag.Title = "Admin Login";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>@ViewBag.Title</title>

    <!-- Bootstrap 4 CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css">

    <!-- Font Awesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">

    <style>
        :root {
            --primary: #3498db;
            --primary-dark: #2980b9;
            --dark: #343a40;
        }

        body {
            background-color: #f8f9fa;
            min-height: 100vh;
            display: flex;
            align-items: center;
        }

        .login-card {
            border: 0;
            border-radius: 10px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }

            .login-card .card-body {
                padding: 2.5rem;
            }

        .login-header {
            background: var(--primary);
            color: white;
            padding: 1.5rem;
            text-align: center;
        }

        .login-title {
            font-weight: 600;
            margin-bottom: 0;
        }

        .form-control {
            height: 45px;
            border-radius: 5px;
        }

        .btn-login {
            background-color: var(--primary);
            border: none;
            padding: 10px;
            font-weight: 600;
            letter-spacing: 0.5px;
        }

            .btn-login:hover {
                background-color: var(--primary-dark);
            }

        .captcha-container {
            display: flex;
            align-items: center;
        }

        .captcha-img {
            height: 45px;
            border: 1px solid #ced4da;
            border-radius: 5px;
            margin-right: 10px;
        }

        .footer-info {
            font-size: 0.8rem;
            color: #6c757d;
            margin-top: 1.5rem;
        }

        .input-group-text {
            background-color: white;
        }

        @@media (max-width: 576px) {
            .login-card .card-body {
                padding: 1.5rem;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-6 col-lg-5">
                <div class="card login-card">
                    <div class="login-header">
                        <h4 class="login-title">@Resource.AdminPanelLoginPage</h4>
                    </div>

                    <div class="card-body">
                        @using (Html.BeginForm("AdminLogin", "Account", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "alert alert-danger alert-dismissible fade show", role = "alert" })

                            <div class="form-group">
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fas fa-envelope"></i></span>
                                    </div>
                                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = Resource.Email, required = "required" })
                                </div>
                                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "invalid-feedback d-block" })
                            </div>

                            <div class="form-group">
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fas fa-lock"></i></span>
                                    </div>
                                    @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = Resource.Password, required = "required" })
                                </div>
                                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "invalid-feedback d-block" })
                            </div>

                            <div class="form-group form-check">
                                @Html.CheckBoxFor(m => m.RememberMe, new { @class = "form-check-input", id = "rememberMe" })
                                <label class="form-check-label" for="rememberMe">@Resource.RememberMe</label>
                            </div>

                            <div class="form-group">
                                <label>@Html.LabelFor(m => m.Captcha)</label>
                                <div class="captcha-container mb-2">
                                    <img src="@Url.Action("GetCaptcha", "Images", new { prefix = "AdminLogin" })" alt="CAPTCHA" class="captcha-img">
                                    @Html.TextBoxFor(m => m.Captcha, new { @class = "form-control", placeholder = "Buraya Yaziniz.", required = "required" })
                                </div>
                                @Html.ValidationMessageFor(m => m.Captcha, "", new { @class = "invalid-feedback d-block" })
                            </div>

                            <button type="submit" class="btn btn-login btn-block btn-lg">
                                <i class="fas fa-sign-in-alt mr-2"></i> @Resource.Login
                            </button>
                        }

                        <div class="footer-info">
                            <p class="mb-1"><i class="fas fa-info-circle mr-2"></i>@AdminResource.JustOpenForAdmin</p>
                            <p class="mb-1"><i class="far fa-calendar-alt mr-2"></i>@String.Format(AdminResource.EnterDateForAdmin, DateTime.Now.ToString("dddd, dd MMMM yyyy HH:mm:ss"))</p>
                            <p class="mb-0"><i class="fas fa-network-wired mr-2"></i>@String.Format(AdminResource.IPAddressForAdmin, EImece.Domain.Helpers.GeneralHelper.GetRemoteIP(Request.ServerVariables))</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.min.js"></script>

    <!-- Form validation -->
    <script>
        (function () {
            'use strict';
            window.addEventListener('load', function () {
                // Fetch all the forms we want to apply custom Bootstrap validation styles to
                var forms = document.getElementsByClassName('needs-validation');

                // Loop over them and prevent submission
                var validation = Array.prototype.filter.call(forms, function (form) {
                    form.addEventListener('submit', function (event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();

        // Focus on email field when page loads
        $(document).ready(function () {
            $('#Email').focus();
        });
    </script>
</body>
</html>