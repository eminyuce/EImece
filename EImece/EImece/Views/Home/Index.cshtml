@using EImece.Domain.Entities;
@using EImece.Domain.Models.FrontModels;
@using EImece.Domain.Helpers.Extensions;
@using EImece.Domain;
@using EImece.Domain.Helpers
@using Resources;
@model MainPageViewModel
@{

    var mainPageImages = Model.MainPageImages;
    var mainPageProducts = Model.MainPageProducts;
    var mainPageProductCategories = Model.MainPageProductCategories.Where(r => r.ParentId == 0).ToList();

    var mainPageStories = Model.StoryIndexViewModel.Stories;
    var campaignProducts = Model.CampaignProducts;
    var latestProducts = Model.LatestProducts;
    var latestStories = Model.LatestStories;

    var isUserAuthenticated = User.Identity.IsAuthenticated && AppConfig.IsEditLinkEnable;
}



<div class="container">

    @for (int i = 0; i < mainPageProductCategories.Count; i++)
    {
        var mainPageProductCategory = mainPageProductCategories[i];
        @Html.DisplayFor(model => mainPageProductCategory, "MainPageProductCategory")
    }
</div>

@if (Model.MainPageMenu != null)
{

    <div class="parallax-banner fullwidth-element" data-background="#000" data-opacity="0.45" data-height="200" style="-webkit-transform: translatey(0);transform: translatey(0);opacity: 1;-webkit-transition: -webkit-transform 0.66s ease-in-out 1s,  opacity 0.66s ease-in-out 1s;transition: transform 0.66s ease-in-out 1s, opacity 0.66s ease-in-out 1s;-webkit-perspective: 1000;-webkit-backface-visibility: hidden;">
        @Html.Raw(Model.MainPageMenu.GetImageTag())
        <div class="parallax-overlay" style="background-color: rgb(0, 0, 0); opacity: 0.45;"></div>
        <div class="parallax-title" style="top: 68.5px;">@Model.MainPageMenu.Name <span>@Model.MainPageMenu.MetaKeywords</span></div>
    </div>

}


@if (latestStories.Count > 0)
{
    var p = latestStories.OrderBy(r => r.Position).ToList();
    <div class="container">
        <!-- Headline -->
        <div class="sixteen columns">
            <h3 class="headline">
                Blog
            </h3>
            <span class="line margin-bottom-30"></span>
        </div>
        @for (int i = 0; i < p.Count; i++)
        {
            var story = p[i];
            @Html.DisplayFor(model => story, "LatestStory")
        }
    </div>

}


<!-- Featured products grid-->
<section class="container px-3 pt-4 mt-3">
    <div class="d-flex flex-wrap justify-content-between align-items-center pb-2">
        <h2 class="h3 mb-3">Featured products</h2><a class="btn btn-outline-primary btn-sm border-0 mb-3" href="shop-style2-ls.html">More products<i class="ml-1 mr-n2" data-feather="chevron-right"></i></a>
    </div>
    <div class="row no-gutters">
        @for (int i = 0; i < mainPageProducts.Count; i++)
        {
            var p = mainPageProducts[i];
            @Html.DisplayFor(model => p, "FeaturedProductItem", new { Width = 305, Height = 305 })
        }

    </div>
</section>


<!-- Product widgets-->
<section class="container px-3 pt-2 pb-4 mb-md-2">
    <div class="row">
        @CreateProductWidget("VİTRİN ÜRÜNLERİ", mainPageProducts)
        @CreateProductWidget("KAMPANYALI ÜRÜNLER", campaignProducts)
        @CreateProductWidget("YENİ ÜRÜNLER", latestProducts)
    </div>
</section>

@helper  CreateProductWidget(String title, List<Product> products)
{
    if (products.IsNotEmpty())
    {
        <div class="col-md-4 col-sm-6 mb-2 py-3">
            <div class="widget widget-featured-entries">
                <h3 class="widget-title font-size-lg">@title</h3>

                @for (int i = 0; i < products.Count; i++)
                {
                    var p = products[i];
                    @Html.DisplayFor(model => p, "MainPageProductShort", new { Width = 80, Height = 80 })
                }

            </div>
        </div>
    }
}

 