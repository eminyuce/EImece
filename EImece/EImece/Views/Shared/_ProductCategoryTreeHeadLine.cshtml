@using EImece.Domain.Entities;
@using EImece.Domain.Helpers;
@using EImece.Domain.Helpers.Extensions;
@using EImece.Domain.Models.FrontModels;

@model List<ProductCategoryTreeModel>
@{
    var productCategories = Model;
}

<!-- Categories-->
<div class="widget widget-categories mb-4 py-1">
    <h3 class="widget-title">Shop categories</h3>
    <ul id="shopCategories">
        @foreach (var p in productCategories)
        {
            var productCategory = p.ProductCategory;
            if (p.Childrens.Any())
            {
                <li class="@String.Format("has-children")">
                    <a href="@productCategory.DetailPageUrl">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                             fill="none" stroke="currentColor" stroke-width="2"
                             stroke-linecap="round" stroke-linejoin="round"
                             class="feather feather-chevron-down widget-categories-indicator">
                            <polyline points="6 9 12 15 18 9"></polyline>
                        </svg>
                        @badgeProductNumber(p)
                    </a>
                    @Html.Partial("_ProductCategoryTreeChildrenHeadLine", p.Childrens)
                </li>

            }
            else
            {

                <li>
                    <a href="@productCategory.DetailPageUrl">
                        @badgeProductNumber(p)
                    </a>
            </li>
        }
    }


    </ul>
</div>


@helper badgeProductNumber(ProductCategoryTreeModel p)
{
    if (p.ProductCount > 0)
    {
        @p.Text <span class="badge text-muted ml-1">(@p.ProductCount)</span>
    }
    else
    {
        @p.Text
    }
}

