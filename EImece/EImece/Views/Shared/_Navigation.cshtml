@using EImece.Domain.Entities;
@using EImece.Domain.Helpers;
@using EImece.Domain.Helpers.Extensions;
@using EImece.Domain.Models.FrontModels;
@model NavigationModel
@{
    var menus = Model.Menus;
    var productCategories = Model.ProductCategories;
}



<!-- Third line: Navigation-->
<div class="navbar navbar-expand-lg navbar-light bg-light px-0">
    <div class="container px-3">
        <!-- navbar collapse area-->
        <div class="collapse navbar-collapse" id="menu">
            <!-- Site menu-->
            <ul class="navbar-nav">
                <li class="nav-item dropdown mega-dropdown dropdown-more">
                    <a class="nav-link dropdown-toggle" href="#" data-toggle="dropdown">Categories<i data-feather="more-horizontal"></i></a>
                    <div class="dropdown-menu">
                        <div class="dropdown-inner">
                            @for (int i = 0; i < productCategories.Count; i++)
                            {
                                @CreateProductTree(productCategories[i])
                            }
                        </div>
                    </div>
                </li>
                @CreateMenuTree(Model)
            </ul>
        </div>
    </div>
</div>

@helper CreateProductTree(ProductCategoryTreeModel categoryTreeModel)
{
    var productCategory = categoryTreeModel.ProductCategory;
    var productImgLink = productCategory.GetCroppedImageUrl(productCategory.MainImageId, 80, 80);
    var productCategoryLink = productCategory.ProductCategoryLink;

    <div class="dropdown-column">
        <div class="bg-position-center bg-no-repeat bg-size-cover text-center px-3 py-4 mb-3" style="background-image: url(img/megamenu/cat_bg03.jpg);">
            <h3 class="h5 text-white text-shadow my-3">@productCategory.Name</h3>
        </div>
        @if (categoryTreeModel.Childrens.IsNotEmpty())
        {
            <div class="widget widget-links">
                <ul>
                    @foreach (var childCategory in categoryTreeModel.Childrens)
                    {
                        var productChildCategory = childCategory.ProductCategory;
                        var productChildImgLink = productCategory.GetCroppedImageUrl(productCategory.MainImageId, 80, 80);
                        var productChildCategoryLink = productCategory.ProductCategoryLink;
                        <li><a href="@productChildCategoryLink"><i class="widget-categories-indicator" data-feather="chevron-right"></i><span class="font-size-sm">@productChildCategory.Name</span></a></li>
                    }
                </ul>
            </div>
        }
    </div>

}
@helper CreateMenuTree(NavigationModel navigationMenu)
{
    var menus = navigationMenu.Menus;

    foreach (var menu in menus)
    {
        <li class="nav-item dropdown mega-dropdown">
            <a class="nav-link dropdown-toggle" href="@menu.DetailPageLink">@menu.Name</a>

            @if (menu.Childrens.IsNotEmpty())
            {
                <div class="dropdown-menu">
                    <div class="dropdown-inner">
                        @foreach (var menuChildren in menu.Childrens)
                        {
                            var imgTag = menuChildren.GetCroppedImageTag(50, 50);

                            <a class="dropdown-column text-decoration-0" href="@menuChildren.DetailPageLink">
                                @if (!string.IsNullOrEmpty(imgTag))
                                {
                                    <img class="d-block img-thumbnail mb-2" src="@imgTag" alt="@menuChildren.Name">
                                }
                                <div class="text-center font-weight-semibold text-dark">@menuChildren.Name   @menuChildren.MenuLink</div>
                            </a>
                        }
                    </div>
                </div>
            }
        </li>
    }

}