@using EImece.Domain.Entities;
@using EImece.Domain.Helpers;
@using EImece.Domain.Models.FrontModels;
@{
    var products = Model as IPaginatedModelList;
    var id = products.RouteId;
}

<nav aria-label="Page navigation">
    <ul class="pagination justify-content-center justify-content-sm-start mb-0">
        <li class="page-item @(products.HasPreviousPage ? " " : "disabled" )">
            <a href=@Url.Action("Category",new { id=id, pageIndex =   1  })
               class="page-link" aria-label="Frist">
                <span aria-hidden="true">|<</span>
                <span class="sr-only">First</span>
            </a>
        </li>
        <li class="page-item @(products.HasPreviousPage ? " " : " disabled" )">
            <a href=@Url.Action("Category",new { id=id,  pageIndex = products.PageIndex - 1  })
               class="page-link" aria-label="Next">
                <span aria-hidden="true"><</span>
                <span class="sr-only">Next</span>
            </a>
        </li>
        @for (var i = 1; i <= products.TotalPageCount; i++)
        {
            <li class="page-item @(i == products.PageIndex ? "active" : "")">
                <a href=@Url.Action("Category",new { id=id,  pageIndex = i  }) class="page-link">@i</a>
            </li>
        }
        <li class="page-item @(products.HasNextPage ? " " : " disabled")">
            <a href=@Url.Action("Category",new { id=id, pageIndex = products.PageIndex + 1  })
               class="page-link" aria-label="Previous">
                <span aria-hidden="true">></span>
                <span class="sr-only">Previous</span>
            </a>
        </li>
        <li class="page-item @(products.HasNextPage ? " " : " disabled")">
            <a href=@Url.Action("Category",new { id=id, pageIndex = products.TotalPageCount  })
               class="page-link" aria-label="Last">
                <span aria-hidden="true">>|</span>
                <span class="sr-only">Last</span>
            </a>
        </li>
    </ul>
</nav>