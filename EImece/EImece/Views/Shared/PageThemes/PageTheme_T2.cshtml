@model EImece.Domain.Models.FrontModels.MenuPageViewModel
@using EImece.Domain.Models.FrontModels;
@using EImece.Domain.Entities
@using EImece.Domain.Helpers.Extensions;
@using EImece.Domain;
@using Resources;
@using EImece.Domain.Helpers;
@{

    var menu = Model.Menu;
    var files = menu.MenuFiles.ToList();
    ViewBag.Title = menu.GetSeoTitle();
    ViewBag.Description = menu.GetSeoDescription();
    var isUserAuthenticated = User.Identity.IsAuthenticated && AppConfig.IsEditLinkEnable;
    var menuTags = menu.MenuFiles.SelectMany(r => r.FileStorage.FileStorageTags.Select(t => t.Tag)).Distinct();
    int Width = ViewData["Width"].ToInt(300);
    int Height = ViewData["Height"].ToInt(214);
}
 
<!-- Page Content -->
<div class="container">

    <!-- Jumbotron Header -->
    <header class="jumbotron hero-spacer">
        @Html.Raw(menu.GetCroppedImageTag(Width, Height))
    </header>

    <hr>

    <!-- Title -->
    <div class="row">
        <div class="col-lg-12">
            <h2>
                @menu.Name
            </h2>
        </div>
        <div class="col-lg-12">
            <p>
                @Html.Raw(menu.Description)
            </p>
        </div>
    </div>
    <div id="portfolio-wrapper" class="pf-col3" style="position: relative; height: 972.843px;">

        @for (int i = 0; i < files.Count; i++)
        {
            var f = files[i].FileStorage;
            @Html.DisplayFor(modelItem => f, "FileStorage")
        }
    </div>
</div>