@model EImece.Domain.Models.FrontModels.MenuPageViewModel
@using EImece.Domain.Models.FrontModels;
@using EImece.Domain.Entities
@using EImece.Domain.Helpers.Extensions;
@using EImece.Domain;
@using Resources;
@using EImece.Domain.Helpers;
@{

    var menu = Model.Menu;
    var files = menu.MenuFiles.ToList();
    ViewBag.Title = menu.GetSeoTitle();
    ViewBag.Description = menu.GetSeoDescription();
    var isUserAuthenticated = User.Identity.IsAuthenticated && AppConfig.IsEditLinkEnable;
    var menuTags = menu.MenuFiles.SelectMany(r => r.FileStorage.FileStorageTags.Select(t => t.Tag)).Distinct();

    int Width = ViewData["Width"].ToInt(300);
    int Height = ViewData["Height"].ToInt(214);
    var imgTag = menu.GetCroppedImageTag(Width, Height);
}

<section class="titlebar margin-bottom-20">

    <div class="container">
        <div class="sixteen columns">
            <h2>
                @menu.Name
            </h2>

            <nav id="breadcrumbs">

                <ul>
                    @if (Model.MainPageMenu != null && Model.MainPageMenu.IsActive)
                    {
                        <li>@Html.ActionLink(Model.MainPageMenu.Name, "Index", "Home")</li>
                    }
                    <li>@Model.Menu.Name</li>
                </ul>
            </nav>
        </div>
    </div>
</section>

<div class="container potrfolio-container">
    <div class="sixteen columns">
        @if (menuTags.IsNotEmpty())
        {

            <div id="filters" class="filters-dropdown headline">
                <span></span>
                <ul class="option-set" data-option-key="filter">
                    <li><a href="#filter" class="selected" data-filter="*">@Resource.All</a></li>
                    @foreach (var t in menuTags)
                {
                        <li><a href="#filter" data-filter=".@GeneralHelper.GetUrlSeoString(t.Name)">@t.Name</a></li>
                    }
                </ul>
            </div>

        }
    </div>
    <div class="clearfix"></div>
</div>
<!-- Page Content -->
<div class="container">

    <!-- Jumbotron Header -->
    <header class="jumbotron hero-spacer">
        @Html.Raw(imgTag)
    </header>

    <hr>

    <!-- Title -->
    <div class="row">
        <div class="col-lg-12">
            <p>
                @Html.Raw(menu.Description)
            </p>
        </div>
    </div>
    @if (files.IsNotEmpty())
    {
        <div id="portfolio-wrapper" class="pf-col3" style="position: relative; height: 972.843px;">
            @for (int i = 0; i < files.Count; i++)
            {
                var f = files[i].FileStorage;
                @Html.DisplayFor(modelItem => f, "FileStorage")
            }
        </div>
    }


</div>