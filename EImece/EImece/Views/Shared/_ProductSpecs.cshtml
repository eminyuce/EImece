@model EImece.Domain.Models.FrontModels.ProductDetailViewModel

@using EImece.Domain.Entities;
@using EImece.Domain.Helpers.HtmlHelpers;
@using EImece.Domain.Helpers.Extensions;
@using EImece.Domain.Helpers;
@using System.Xml;
@using System.Linq;
@using System.Text;
@using System.Xml.Linq;
@using EImece.Domain;
@using Resources;

@{
    var product = Model.Product;
    var productSpecs = product.ProductSpecifications.Where(r => !String.IsNullOrEmpty(r.Value)).OrderBy(r => r.Position).ToList();
    var template = Model.Template;
    var isUserAuthenticated = User.Identity.IsAuthenticated && ApplicationConfigs.IsEditLinkEnable;
}
@if (isUserAuthenticated)
{
    @Html.ActionLink("edit specs", "saveoreditproductspecs", "Products", new { @id = product.Id, @area = "admin" }, new { @class = "adminPageLink", @target = "_blank" })
}
@if (productSpecs.Any())
{

    if (!String.IsNullOrEmpty(template.TemplateXml))
    {
        XDocument xdoc = XDocument.Parse(template.TemplateXml);
        var groups = xdoc.Root.Descendants("group");

        if (groups.Any())
        {

            foreach (var group in groups)
            {

                foreach (XElement field in group.Elements())
                {

                    var name = field.Attribute("name");
                    var unit = field.Attribute("unit");
                    var values = field.Attribute("values");
                    var display = field.Attribute("display");
                    var dbValueObj = productSpecs.FirstOrDefault(r => r.Name.Equals(name.Value, StringComparison.InvariantCultureIgnoreCase));
                    var isValueExist = dbValueObj != null;
                    if (!isValueExist)
                    {
                        continue;
                    }
                    string attributeName = "";
                    if (display != null)
                    {
                        attributeName = display.Value;
                    }
                    else
                    {
                        attributeName = name.Value;
                    }

                    if (isValueExist)
                    {
                        <div>
                            @String.Format("{0} : {1}", attributeName, dbValueObj.Value).Trim()
                        </div>

                    }

                }
            }

        }
    }

}