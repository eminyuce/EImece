@model EImece.Domain.Models.FrontModels.ContactUsFormViewModel
@using EImece.Domain.Helpers;
@using Resources;
@{
    var SendButtonText = Resource.SendButtonText;
}

@using (Html.BeginForm("SendContactUs", "Home", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ContactFormType)
    @Html.HiddenFor(model => model.ItemId)
    @Html.HiddenFor(model => model.ItemType)
    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })
        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label" })
                @Html.TextAreaFor(model => model.Message, new { @rows = "5", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
            </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.Captcha)
                </div>
                <div class="col-md-10">
                    <img width="180" height="50" rel="nofollow" src="@Url.Action("GetCaptcha", "Images", new { prefix = "ContactUsLogin" })" alt="Captcha" />
                </div>
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Captcha, new { @class = "form-control", @placeholder = Resource.AnswerSecurityQuestion, @autocomplete = "false" })
                    @Html.ValidationMessageFor(model => model.Captcha, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="@SendButtonText" class="btn btn-outline-info rounded mb-2 mr-1 btn-block" />
                </div>
            </div>
        </div>
}