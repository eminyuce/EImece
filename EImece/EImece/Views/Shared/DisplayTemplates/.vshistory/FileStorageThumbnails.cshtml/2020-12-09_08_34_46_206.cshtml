@model EImece.Domain.Entities.FileStorage
@using EImece.Domain.Helpers.Extensions;
@using EImece.Domain.Helpers;
@using EImece.Domain;
@using Resources;
@{
    EImece.Domain.Entities.FileStorage fileStorage = Model;
    var isUserAuthenticated = User.Identity.IsAuthenticated && AppConfig.IsEditLinkEnable;
    var tags = fileStorage.FileStorageTags.Select(r1 => r1.Tag).Distinct().ToList();
    string tagsText = String.Join(" ", tags.Select(r => String.Format("{0}", GeneralHelper.GetUrlSeoString(r.Name))));
    string filters = String.Join(" ", tags.Select(r => String.Format("filters-{0}", GeneralHelper.GetUrlSeoString(r.Name))));
    int Width = ViewData["Width"].ToInt(0);
    int Height = ViewData["Height"].ToInt(0);
    var imgSrc = @Html.Raw(fileStorage.GetCroppedImageUrl(fileStorage.Id, Width, Height));
}

<img src="" class="img-thumbnail rounded" alt="Rounded image">


<a href="path-to-large-image" class="gallery-item mb-grid-gutter" data-fancybox="gallery1" data-options='{"caption": "Gallery image caption #1"}'>
    <img src="path-to-small-image" alt="Gallery image">
    <div class="gallery-caption">
        <div class="gallery-indicator">
            <i class="gallery-indicator-icon" data-feather="zoom-in"></i>
        </div>
        I'm gallery caption
    </div>
</a>
