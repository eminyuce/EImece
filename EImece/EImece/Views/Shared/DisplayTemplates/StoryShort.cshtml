@model EImece.Domain.Entities.Story
@using EImece.Domain.Helpers.Extensions;
@using EImece.Domain.Entities;
@using EImece.Domain.Helpers.HtmlHelpers;
@using EImece.Domain.Helpers;
@using EImece.Domain;
@using Resources;
@{
    var story = Model;
    int Width = ViewData["Width"].ToInt(0);
    int Height = ViewData["Height"].ToInt(0);
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-12">
            <div class="card shadow-sm">
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-4 text-center">
                            <!-- Cropped image -->
                            <a href="@story.DetailPageUrl" class="text-dark">
                                @Html.Raw(story.GetCroppedImageTag(0, 0))
                            </a>
                        </div>
                        <div class="col-md-8">
                            <div class="d-flex justify-content-between align-items-start">
                                <h5 class="card-title mb-1">
                                    <a href="@story.DetailPageUrl" class="text-dark">
                                        @Html.DisplayFor(model => story.Name)
                                    </a>
                                </h5>
                                <div class="text-right">
                                    <p class="mb-1 text-muted">
                                        <strong>@Resource.StoryCategory:</strong>
                                        <a href="@story.StoryCategory.DetailPageRelativeUrl" class="text-dark">
                                            @Html.DisplayFor(model => story.StoryCategory.Name)
                                        </a>
                                      
                                    </p>
                                    @if (story.IsFeaturedStory)
                                    {
                                        <span class="badge badge-success mb-2">Featured</span>
                                    }
                                </div>
                            </div>

                            <p class="mb-1 text-muted">
                                <strong>@Resource.AuthorName:</strong> @Html.DisplayFor(model => story.AuthorName)
                            </p>

                            <p class="text-muted">
                                <small>@story.UpdatedDate.ToShortDateString()</small>
                            </p>

                            <p class="card-text mt-2">
                                @Html.Raw(story.ShortDescription)
                            </p>
                            <p>
                                <a href="@story.DetailPageUrl" class="text-dark">
                                    @Resource.ReadMore
                                </a>
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
