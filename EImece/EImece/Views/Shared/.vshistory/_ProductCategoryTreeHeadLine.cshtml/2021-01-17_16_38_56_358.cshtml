@using EImece.Domain.Entities
@using EImece.Domain.Helpers.Extensions;
@using EImece.Domain.Helpers;
@using EImece.Domain.Models.FrontModels;
@using Resources;
@using EImece.Domain;
@using EImece.Domain.Helpers.HtmlHelpers;
@using EImece.Domain.Models;
@using EImece.Domain.Models.Enums;

@model Tuple<int, string, string>(ProductCategory, List<ProductCategoryTreeModel>)
@{
    var productCategories = Model;
}

@if (productCategories.IsNotEmpty())
{
    <!-- Categories-->
    <div class="widget widget-categories mb-4 py-1">
        <h3 class="widget-title">@AdminResource.ProductCategories</h3>
        <ul id="shopCategories">
            @foreach (var p in productCategories)
            {
                var productCategory = p.ProductCategory;
                if (p.Childrens.IsNotEmpty())
                {
                    <li class="@String.Format("has-children")">
                        <a  data-toggle="collapse" class="collapsed"
                           id="@string.Format("productCategory{0}",productCategory.Id)"
                           href="@string.Format("#shopCategories{0}",productCategory.Id)">
                            <i class="widget-categories-indicator" data-feather="chevron-down"></i>
                            @badgeProductNumber(p)
                        </a>
                        @Html.Partial("_ProductCategoryTreeChildrenHeadLine", p)
                    </li>

                }
                else
                {

                    <li>
                        <a id="@string.Format("productCategory{0}",productCategory.Id)"
                           href="@productCategory.DetailPageUrl">
                            @badgeProductNumber(p)
                        </a>
                    </li>
                }
            }
        </ul>
    </div>
}

@helper badgeProductNumber(ProductCategoryTreeModel p)
{
    if (p.ProductCount > 0)
    {
        @p.ProductCategoryName <span class="badge text-muted ml-1">(@p.ProductCount)</span>
    }
    else
    {
        @p.ProductCategoryName
    }
}