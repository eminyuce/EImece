@using EImece.Domain.Entities;
@{
    Subscriber subscriber = Subscriber.GetInstance<Subscriber>();
}

@using (Html.BeginForm("AddSubscriber", "Home", FormMethod.Post, new { @class= "form-horizontal" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    
        <h4>Subscribers</h4>
        @Html.HiddenFor(model => subscriber.IsActive)

        <div class="form-group">
            @Html.LabelFor(model => subscriber.Name, new { @class = "control-label  col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => subscriber.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => subscriber.Name)
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => subscriber.Email, new { @class = "control-label  col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => subscriber.Email, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => subscriber.Email)
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    
}
