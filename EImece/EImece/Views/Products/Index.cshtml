@using GenericRepository;
@using EImece.Domain.Entities;
@using EImece.Domain.Helpers.HtmlHelpers;
@using EImece.Domain.Models.FrontModels;
@using EImece.Domain.Helpers;
@using EImece.Domain.Helpers.Extensions;
@using Resources;
@model ProductIndexViewModel
@using EImece.Domain;
@{
    ViewBag.Title = String.Format("{0} {1}", Model.CompanyName.SettingValue, Resource.Products);
    PaginatedList<Product> products = Model.Products;
    ViewBag.Description = String.Join(",", products.Select(r => r.Name)).ToStr(150);
    var isUserAuthenticated = User.Identity.IsAuthenticated && AppConfig.IsEditLinkEnable;
    List<Tag> tags = Model.Tags;
    List<Tag> productTags = products.SelectMany(r => r.ProductTags.Select(r1 => r1.Tag)).Distinct().ToList();
}

@Html.Partial("_ProductTitleBar", new ViewDataDictionary(ViewData){
                              {"ProductMenu",Model.ProductMenu}, {"MainPageMenu",Model.MainPageMenu } })

<div class="pagination-container">
    <nav class="pagination">
        <div class="paging">
            Test
            @Html.BootstrapPager(products.PageIndex,
    index => Url.Action("Index", "Products", new { page = index }),
    products.TotalCount, products.PageSize, numberOfLinks: 10)
        </div>
    </nav>
</div>

<div class="container potrfolio-container">
    <div class="sixteen columns">
        @if (productTags.Any())
        {

        <div id="filters" class="filters-dropdown headline">
            <span></span>
            <ul class="option-set" data-option-key="filter">
                <li><a href="#filter" class="selected" data-filter="*">@Resource.All</a></li>
                @foreach (var t in productTags)
                    {
                <li><a href="#filter" data-filter=".@GeneralHelper.GetUrlSeoString(t.Name)">@t.Name</a></li>
                    }
            </ul>
        </div>

        }
    </div>
    <div class="clearfix"></div>

    @*@Html.Partial("_PagingPartial", products)*@
    <div id="portfolio-wrapper" class="pf-col3" style="position: relative; height: 972.843px;">

        @foreach (var item in products)
        {

        @Html.DisplayFor(modelItem => item, "Product")

        }
    </div>
</div>

@if (products.TotalCount > products.PageSize)
{
<div class="pagination-container">
    <nav class="pagination">
        <div class="paging">

            @Html.BootstrapPager(products.PageIndex,
index => Url.Action("Index", "Products", new { page = index }),
products.TotalCount, products.PageSize, numberOfLinks: 10)
        </div>
    </nav>
</div>

}