@model EImece.Domain.Models.FrontModels.BuyNowModel
@using EImece.Domain.Entities;
@using EImece.Domain.Helpers.HtmlHelpers;
@using EImece.Domain.Helpers.Extensions;
@using EImece.Domain.Helpers;
@using EImece.Domain;
@using Resources;
@using EImece.Domain.Entities
@using EImece.Domain.Helpers.Extensions;
@using EImece.Domain.Helpers;
@using EImece.Domain.Models.FrontModels;
@using Resources;
@using EImece.Domain;
@using EImece.Domain.Helpers.HtmlHelpers;
@using EImece.Domain.Models.Enums;
@using System.Collections.Immutable;
@using System.Text.RegularExpressions;

@{
    var customer = Model.Customer;
    var product = Model.ProductDetailViewModel.Product;
    ViewBag.Title = product.GetProductSeoTitle();
    ViewBag.Description = product.GetSeoDescription();
    ViewBag.Keywords = product.GetSeoKeywords();
    Layout = "~/Views/Shared/_Layout.cshtml";
    var productCategory = product.ProductCategory;

    var mainImageImgSrc = product.MainImageSrc.Item1;
    var productMainImageId = product.MainImageId.HasValue ? product.MainImageId.Value : 0;
    var mainImageImgSrcUrl = product.GetCroppedImageUrl(productMainImageId, 610, 0);
    var mainImageThbImgSrc = product.GetCroppedImageUrl(productMainImageId, 95, 105);
}
<!-- Page Title-->
<div class="page-title-wrapper" aria-label="Page title">
    <div class="container">
        <div class="alert alert-secondary" role="alert">
            @Html.Partial("_ProductBreadCrumb", Model.ProductDetailViewModel)
        </div>
        <h1 class="page-title">@product.NameLong</h1><span class="d-block mt-2 text-muted"></span>
        <hr class="mt-4">
    </div>
</div>

<div class="container pb-5 mb-sm-4 mt-n2 mt-md-n3">
    <div class="row pt-4 mt-2">
        <!-- Content-->
        <div class="col-xl-9 col-md-8">
            <h2 class="h6 px-4 py-3 bg-secondary mb-4">Hizli Sepet</h2>
            <!-- Item-->
            <div class="d-sm-flex justify-content-between my-4 pb-4 border-bottom">
                <div class="media d-block d-sm-flex text-center text-sm-left">
                    @if (product.ImageState && !string.IsNullOrEmpty(mainImageThbImgSrc))
                    {
                        <a class="cart-item-thumb mx-auto mr-sm-4" href="@product.DetailPageRelativeUrl"><img src="@mainImageThbImgSrc" alt="Product"></a>
                    }
                    else
                    {
                        <a class="cart-item-thumb mx-auto mr-sm-4" href="@product.DetailPageRelativeUrl"><img src="@EImece.Domain.AppConfig.GetDefaultImage("w170h170")" alt="Product"></a>
                    }

                    <div class="media-body pt-3">
                        <h3 class="product-card-title font-weight-semibold border-0 pb-0"><a href="@product.DetailPageRelativeUrl">@product.NameLong</a></h3>
                        <div class="font-size-lg text-primary pt-2">@product.Price.CurrencySign()</div>
                    </div>
                </div>
                <div class="pt-2 pl-sm-3 mx-auto mx-sm-0 text-center text-sm-left" style="max-width: 10rem;">
                    <div class="font-size-sm mb-3"><span class="text-muted mr-2">@Resource.Quantity:</span><span class="font-weight-semibold">1</span></div>
                </div>
            </div>

            <!-- Navigation-->

        </div>
        <!-- Sidebar-->
        <div class="col-xl-3 col-md-4 pt-4 mt-3 pt-md-0 mt-md-0">
            <h2 class="h6 px-4 py-3 bg-secondary text-center">@Resource.OrderSummary</h2>
            <div class="font-size-sm border-bottom pt-2 pb-3">
                <div class="font-size-sm"><span class="text-muted mr-2">@Resource.Price :</span>@product.Price.CurrencySign()</div>
                <div class="font-size-sm"><span class="text-muted mr-2">@Resource.Quantity :</span>1</div>
                <div class="font-size-sm"><span class="text-muted mr-2">@AdminResource.ProductCategory :</span>@product.ProductCategory.Name</div>
            </div>
            <div class="h3 font-weight-semibold text-center py-3">@product.Price.CurrencySign()</div>
        </div>
        <div class="col-md-12">
            <div class="alert alert-secondary">
                <div class="text-center">
                    <b class="text-dark">
                        @Resource.CustomerBillingDetailsNotFilledOut
                    </b>
                </div>
            </div>
        </div>
        <div class="col-xl-12 col-md-12">
            <h6 class="mb-3 pt-2 pb-3 border-bottom">@Resource.ShippingAddress</h6>
            @using (Html.BeginForm("BuyNow", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <input type="hidden" name="productId" value="@product.ModifiedId" />
                <div class="row">
                    @Html.AntiForgeryToken()
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => customer.Name)
                            @Html.EditorFor(model => customer.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => customer.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => customer.Surname)
                            @Html.EditorFor(model => customer.Surname, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => customer.Surname, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => customer.Email)
                            @Html.EditorFor(model => customer.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => customer.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => customer.IdentityNumber)
                            @Html.EditorFor(model => customer.IdentityNumber, new { htmlAttributes = new { @class = "form-control" } })
                            <span class="badge badge-pill badge-info mr-2 mb-2">@Resource.WhyNeedIdentityNumber</span>
                            @Html.ValidationMessageFor(model => customer.IdentityNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => customer.GsmNumber)
                            @Html.EditorFor(model => customer.GsmNumber, new { htmlAttributes = new { @class = "form-control" } })
                            <span class="badge badge-pill badge-info mr-2 mb-2">@Resource.WhyNeedGsmNumber</span>
                            @Html.ValidationMessageFor(model => customer.GsmNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => customer.GsmNumber)
                            @Html.EditorFor(model => customer.GsmNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => customer.GsmNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => customer.City)
                            @Html.EditorFor(model => customer.City, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => customer.City, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => customer.Town)
                            @Html.EditorFor(model => customer.Town, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => customer.Town, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => customer.District)
                            @Html.EditorFor(model => customer.District, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => customer.District, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => customer.Street)
                            @Html.EditorFor(model => customer.Street, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => customer.Street, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">

                        <div class="form-group">
                            @Html.LabelFor(model => customer.ZipCode)
                            @Html.EditorFor(model => customer.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => customer.ZipCode, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => customer.Country)
                            @Html.DropDownListFor(model => customer.Country, GeneralHelper.GetStaticCountries(), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => customer.Country, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <div class="form-group">
                            @Html.LabelFor(model => customer.Company)
                            @Html.EditorFor(model => customer.Company, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => customer.Company, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <div class="form-group">
                            @Html.LabelFor(model => customer.Description)
                            @Html.EditorFor(model => customer.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => customer.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <h6 class="mb-3 pt-4 pb-3 border-bottom">@Resource.BillingAdress</h6>
                <div class="custom-control custom-checkbox">
                    <input class="custom-control-input" type="checkbox" checked="">
                    @Html.LabelFor(model => customer.IsSameAsShippingAddress, new { @class = "custom-control-label" })
                </div>
                <!-- Navigation-->
                <div class="row">
                    <div class="col-sm-12">
                        <input type="submit" class="btn btn-outline-info btn-block" id="ReviewYourOrder" value="@Resource.GoToPayment" />
                    </div>
                </div>
            }

        </div>

    </div>
    </div>