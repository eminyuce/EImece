@model EImece.Domain.Models.FrontModels.ProductsSearchViewModel
@using GenericRepository;
@using EImece.Domain.Entities
@using EImece.Domain.Helpers.Extensions;
@using EImece.Domain.Helpers;
@using EImece.Domain.Models.FrontModels;
@using Resources;
@using EImece.Domain;
@using EImece.Domain.Helpers.HtmlHelpers;
@using EImece.Domain.Models;
@using EImece.Domain.Models.Enums;
@{
    String search = Model.Search;
    ViewBag.Title = String.Format(Resource.ProductSearchPageTitle, search);
    var productsAll = Model.Products;
    var products = new PaginatedModelList<Product>(productsAll, Model.Page, Model.RecordPerPage, productsAll.TotalCount);
    products.Search = search;
    products.PageIndex = Model.Page;
    products.Sorting = (int)Model.Sorting;
    ViewBag.Description = String.Join(",", Model.Products.Select(r => r.Name)).ToStr(150);
    Layout = "~/Views/Shared/_Layout.cshtml";
    List<Tag> productTags = products.SelectMany(r => r.ProductTags.Select(r1 => r1.Tag)).Distinct().ToList();

}

@if (String.IsNullOrEmpty(Model.Search))
{
    <div class="alert alert-secondary">
        <div class="pt-3 pb-2 text-center ">
            @Html.Raw(@Resource.NOSearchResult)
        </div>
    </div>
}
else
{

    <div class="page-title-wrapper" aria-label="Page title">
        <div class="container">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="mt-n1 mr-1"><i data-feather="home"></i></li>
                    <li class="breadcrumb-item">
                        <a href="@Url.Action("Index","Home")">@Resource.HomePage</a>
                    </li>
                    <li class="breadcrumb-item">
                        @Resource.SearchResults
                    </li>
                </ol>
            </nav>
            <h1 class="page-title">@Html.Raw(String.Format(Resource.SearchResultTotalCountText, Model.Search, productsAll.TotalCount))</h1><span class="d-block mt-2 text-muted"></span>
            <hr class="mt-4">
        </div>
    </div>

    <div class="container potrfolio-container">

        @if (products.IsNotEmpty())
        {
            <!-- Toolbar-->
            <div class="d-flex flex-wrap justify-content-center justify-content-sm-between pb-3">
                <div class="d-flex flex-wrap">
                    <div class="form-inline flex-nowrap mr-3 mr-sm-4 pb-3">
                        <label class="text-nowrap mr-2 d-none d-sm-block" for="sorting">@Resource.SortBy:</label>
                        <div class="button-group tabs">

                            <a href="@Model.ProductsListPageUrl(SortingType.Newest,products)"
                               rel="nofollow" class="@activeButtonClass(SortingType.Newest, products)">@Resource.NewestItems</a>
                            <a href="@Model.ProductsListPageUrl(SortingType.LowHighPrice,products)"
                               rel="nofollow" class="@activeButtonClass(SortingType.LowHighPrice, products)">@Resource.LowHighPriceItems</a>
                            <a href="@Model.ProductsListPageUrl(SortingType.HighLowPrice,products)"
                               rel="nofollow" class="@activeButtonClass(SortingType.HighLowPrice, products)">@Resource.HighLowPriceItems</a>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Products grid-->
            <div class="row no-gutters">
                @foreach (var p in products)
                {
                    @Html.DisplayFor(model => p, "SearchProductItem", new { Width = 300, Height = 300 })
                }
            </div>
            <div class="offset-md-4 col-md-8 pb-5">
                @Html.Partial("_PaginatedModelList", products, new ViewDataDictionary(ViewData){
                                  {"actionName","searchproducts"}, {"controllerName","products" } })
            </div>

        }
        else
        {

            <div class="alert alert-secondary alert-with-icon" role="alert">
                <div class="alert-icon-box"><i class="alert-icon" data-feather="alert-triangle"></i></div>
                @Html.Raw(@Resource.NOSearchResult)
            </div>

        }
    </div>
}
@functions {

    public string activeButtonClass(SortingType selected, IPaginatedModelList products)
    {
        return String.Format("{0}", products.Sorting == (int)selected ? "btn btn-pill btn-secondary mb-2 mr-1" : "btn btn-pill btn-outline-secondary mb-2 mr-1");
    }
}