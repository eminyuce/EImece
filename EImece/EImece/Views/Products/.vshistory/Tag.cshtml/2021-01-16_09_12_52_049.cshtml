@model EImece.Domain.Models.FrontModels.SimiliarProductTagsViewModel
@using GenericRepository;
@using EImece.Domain.Entities
@using EImece.Domain.Helpers.Extensions;
@using EImece.Domain.Helpers;
@using EImece.Domain.Models.FrontModels;
@using EImece.Domain;
@using EImece.Domain.Helpers.HtmlHelpers;
@using EImece.Domain.Models;
@using EImece.Domain.Models.Enums;
@using Resources;
@{
    PaginatedList<ProductTag> productTags = Model.ProductTags;
    var productsTagPaging = new PaginatedModelList<ProductTag>(productTags, Model.Page, Model.RecordPerPage, productTags.TotalCount);
    var tag = Model.Tag;
    ViewBag.Title = tag.GetSeoTitle();
    ViewBag.Description = String.Join(",", productTags.Select(r => r.Product.Name)).ToStr(150);
    Layout = "~/Views/Shared/_Layout.cshtml";

    var isUserAuthenticated = User.Identity.IsAuthenticated && AppConfig.IsEditLinkEnable;
}
<div class="page-title-wrapper" aria-label="Page title">
    <div class="container">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="mt-n1 mr-1"><i data-feather="home"></i></li>
                <li class="breadcrumb-item">
                    <a href="@Url.Action("Index","Home")">@Resource.HomePage</a>
                </li>
                <li class="breadcrumb-item">
                    @tag.Name
                </li>
            </ol>
        </nav>
        <h1 class="page-title">@tag.Name</h1>
        <span class="d-block mt-2 text-muted"></span>
        <hr class="mt-4">
        <div class="d-flex flex-wrap justify-content-center justify-content-sm-between pb-1">
            <div class="d-flex flex-wrap">
                <span class="d-block mt-2">@Html.Raw(String.Format(Resource.TagResultTotalCountText, tag.Name, productTags.TotalCount))</span>
            </div>
        </div>
    </div>
</div>

<div class="container potrfolio-container">

    <div class="clearfix"></div>
    <!-- Toolbar-->
    <div class="d-flex flex-wrap justify-content-center justify-content-sm-between pb-3">
        <div class="d-flex flex-wrap">
            <div class="form-inline flex-nowrap mr-3 mr-sm-4 pb-3">
                <label class="text-nowrap mr-2 d-none d-sm-block" for="sorting">@Resource.SortBy:</label>
                <div class="button-group tabs">

                    <a href="@Model.ProductsListPageUrl(SortingType.Newest,products)"
                       rel="nofollow" class="@activeButtonClass(SortingType.Newest, products)">@Resource.NewestItems</a>
                    <a href="@Model.ProductsListPageUrl(SortingType.LowHighPrice,products)"
                       rel="nofollow" class="@activeButtonClass(SortingType.LowHighPrice, products)">@Resource.LowHighPriceItems</a>
                    <a href="@Model.ProductsListPageUrl(SortingType.HighLowPrice,products)"
                       rel="nofollow" class="@activeButtonClass(SortingType.HighLowPrice, products)">@Resource.HighLowPriceItems</a>
                </div>
            </div>
        </div>
    </div>
    <!-- Products grid-->
    <div class="row no-gutters">
        @foreach (var p in productTags)
        {
            @Html.DisplayFor(model => p.Product, "SearchProductItem", new { Width = 300, Height = 300 })
        }
    </div>
    <div class="offset-md-4 col-md-8 pb-5">
        @Html.Partial("_PaginatedModelList", productsTagPaging, new ViewDataDictionary(ViewData){
                          {"actionName","Tag"}, {"controllerName","products" } })
    </div>
</div>
@functions {

    public string activeButtonClass(SortingType selected, IPaginatedModelList products)
    {
        return String.Format("{0}", products.Sorting == (int)selected ? "btn btn-pill btn-secondary mb-2 mr-1" : "btn btn-pill btn-outline-secondary mb-2 mr-1");
    }
}