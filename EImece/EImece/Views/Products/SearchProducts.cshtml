@model EImece.Domain.Models.FrontModels.ProductsSearchViewModel
@using GenericRepository;
@using EImece.Domain.Entities;
@using EImece.Domain.Helpers.HtmlHelpers;
@using EImece.Domain
@using EImece.Domain.Helpers.Extensions;
@using Resources;
@using EImece.Domain.Helpers;


@{
    String search = Model.Search;
    ViewBag.Title = String.Format(Resource.ProductSearchPageTitle, search);
    PaginatedList<Product> products = Model.Products;
    ViewBag.Description = String.Join(",", Model.Products.Select(r => r.Name)).ToStr(150);
    Layout = "~/Views/Shared/_Layout.cshtml";


}

<h2>Search Products</h2>


@Html.BootstrapPager(products.PageIndex,
    index => Url.Action("Index", "Products", new { page = index }),
    products.TotalCount, products.PageSize, numberOfLinks: 10)

@Html.Partial("_PagingPartial", products)
@foreach (var item in products)
{
    <div>
        @Html.DisplayFor(modelItem => item, "ProductSearchItem")
    </div>
}
@Html.Partial("_PagingPartial", products)
