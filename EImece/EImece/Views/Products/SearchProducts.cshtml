@model EImece.Domain.Models.FrontModels.ProductsSearchViewModel
@using GenericRepository;
@using EImece.Domain.Entities;
@using EImece.Domain.Helpers.HtmlHelpers;
@using EImece.Domain
@using EImece.Domain.Helpers.Extensions;
@using Resources;
@using EImece.Domain.Helpers;

@{
    String search = Model.Search;
    ViewBag.Title = String.Format(Resource.ProductSearchPageTitle, search);
    PaginatedList<Product> products = Model.Products;
    ViewBag.Description = String.Join(",", Model.Products.Select(r => r.Name)).ToStr(150);
    Layout = "~/Views/Shared/_Layout.cshtml";
    List<Tag> productTags = products.SelectMany(r => r.ProductTags.Select(r1 => r1.Tag)).Distinct().ToList();

}

@Html.Partial("_ProductTitleBar", new ViewDataDictionary(ViewData){
                              {"ProductMenu",Model.ProductMenu}, {"MainPageMenu",Model.MainPageMenu } })

@if (String.IsNullOrEmpty(Model.Search))
{
    <div class="container potrfolio-container">
        <div class="sixteen columns">
            @Resource.NOSearchResult
        </div>
    </div>
}
else
{

    <div class="container potrfolio-container">

        <section class="title">
            <h2>@String.Format(Resource.SearchResultText, Model.Search)</h2>
        </section>

        <div class="sixteen columns">
            @if (productTags.Any())
                {

                <div id="filters" class="filters-dropdown headline">
                    <span></span>
                    <ul class="option-set" data-option-key="filter">
                        <li><a href="#filter" class="selected" data-filter="*">@Resource.All</a></li>
                        @foreach (var t in productTags)
                        {
                            <li><a href="#filter" data-filter=".@GeneralHelper.GetUrlSeoString(t.Name)">@t.Name</a></li>
                        }
                    </ul>
                </div>

            }
        </div>
        <div class="clearfix"></div>

        @if (products.TotalCount > products.PageSize)
        {
            <div class="pagination-container">
                <nav class="pagination">
                    <div class="paging">

                        @Html.BootstrapPager(products.PageIndex,
    index => Url.Action("searchproducts", "Products", new { page = index }),
    products.TotalCount, products.PageSize, numberOfLinks: 10)
                    </div>
                </nav>
            </div>

        }

        <div id="portfolio-wrapper" class="pf-col3" style="position: relative; height: 972.843px;">

            @foreach (var item in products)
                {
                @Html.DisplayFor(modelItem => item, "SearchProducts")
            }
        </div>
    </div>
}